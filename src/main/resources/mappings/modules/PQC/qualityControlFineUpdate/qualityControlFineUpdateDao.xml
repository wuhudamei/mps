<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.QualityControlFineUpdateDao">
    
	<sql id="QualityControlFineUpdateEntityColumns">
		a.id AS "id",
		a.is_delay AS "isDelay",
		a.delay_days AS "delayDays",
		a.status AS "status",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.business_type AS "businessType"
	</sql>
	
	<sql id="QualityControlFineUpdateEntityJoins">
	</sql>
    
	 <select id="get" resultType="QualityControlFineUpdateEntity">
		select 1 from dual
	</select>
	
	<select id="findList" resultType="QualityControlFineUpdateEntity">
			SELECT
	a.id AS "checkItemId",
	o.id AS "orderId",
	o.store_id AS "storeId",
	o.order_number AS "orderNumber",
	o.project_mode AS "projectMode",
	o.community_name AS 'xiaoqu',
	o.build_unit AS 'danyuan',
	o.build_number AS 'lou',
	o.build_room AS 'shi',
	o.customer_name AS "customerName",
	o.customer_phone AS "customerPhone",	
	o.item_manager_id AS "managerId",
	o.item_manager AS "managerName",
	b.qc_bill_code AS 'reportCode',
	b.id AS "billId",
	b.qc_bill_type AS 'reportType',
	n.qc_check_node_name AS "checkNodeName",
	e.realName AS "orderInspectorName",
	e1.realName AS "checkManName",
	k.qc_check_kind_name AS "checkTypeName",
	c.qc_check_item_name AS "checkItemName",
	t.id AS "engineDepartId",
	t.`name` AS "engineDepartName",
	a.create_date AS "createDate",
	(
		SELECT
			realName
		FROM
			biz_employee
		WHERE
			id = (
				SELECT
					a1.groupId
				FROM
					biz_employeegroup a1
				WHERE
					a1.id = a.worker_punish_employeegroup_id
			)
	) AS "workerGroupLeaderName",
	a.worker_punish_amount AS "workerMoney",
	a.worker_punish_score AS "workerScore",
	a.qc_punish_amount AS "inspectorMoney",
	a.qc_punish_score AS "inspectorScore",
	a.pm_punish_score AS "managerScore",
	a.punish_money_amount_real AS "punishMoney",
	c.id AS "qcCheckItemId",
	j.package_name AS "packageName",
	j.package_stateId AS "packageStateId",
	j.package_statename AS "packageStateName" 
FROM
	biz_qc_bill_check_item a
INNER JOIN biz_qc_bill b ON a.qc_bill_id = b.id
	<if test="reportCode!=null and reportCode!=''">
		and b.qc_bill_code =#{reportCode}
	</if>
INNER JOIN biz_qc_check_item c ON a.qc_check_item_id = c.id
	<if test="qcCheckItemId!=null and qcCheckItemId!=''">
			and  c.id= #{qcCheckItemId}
	</if>
LEFT JOIN biz_qc_check_node n ON b.qc_check_node_id = n.id
INNER JOIN biz_order o ON b.order_id = o.id
INNER JOIN biz_engineering_department t ON o.engin_depart_id = t.id
INNER JOIN biz_employee e ON o.order_inspector_id = e.id
INNER JOIN biz_qc_check_kind k ON c.qc_check_kind_id = k.id
LEFT JOIN biz_order_taskpackage j on j.id = a.worker_punish_order_taskpackage_id
INNER JOIN biz_employee e1 ON b.check_employee_id = e1.id
where
		 a.is_punish_money = 1
		and b.status not in (-1,0)
		
	 <if test="storeId !='' and storeId != null">
	 and  o.store_id = #{storeId}
	 </if>
	 <if test="engineDepartId !='' and engineDepartId != null">
	 and  t.id = #{engineDepartId}
	 </if>
	 <if test="managerName !='' and managerName != null">
	 and  o.item_manager like CONCAT('%','${managerName}','%' )  
	 </if>
	 <if test="projectMode !='' and projectMode != null">
	 and  o.project_mode = #{projectMode}
	 </if>
	 <if test="orderNumber !='' and orderNumber != null">
	 and  o.order_number like CONCAT('%','${orderNumber}','%' )  
	 </if>
	 <if test="customerName !='' and customerName != null">
	 and  o.customer_name like CONCAT('%','${customerName}','%' )  
	 </if>
	
	 <if test="orderInspectorName !='' and orderInspectorName != null">
	 and e.realName like CONCAT('%','${orderInspectorName}','%' )  
	 </if>
	 and (a.worker_punish_amount>0 or a.qc_punish_amount>0 or a.punish_money_amount_real>0)
	 order by b.create_date desc
	</select>
	<select id="findList1" resultType="QualityControlFineUpdateEntity">
			SELECT
	a.id AS "checkItemId",
	o.id AS "orderId",
	o.store_id AS "storeId",
	o.order_number AS "orderNumber",
	o.project_mode AS "projectMode",
	o.community_name AS 'xiaoqu',
	o.build_unit AS 'danyuan',
	o.build_number AS 'lou',
	o.build_room AS 'shi',
	o.customer_name AS "customerName",
	o.customer_phone AS "customerPhone",	
	o.item_manager_id AS "managerId",
	o.item_manager AS "managerName",
	b.qc_bill_code AS 'reportCode',
	b.id AS "billId",
	b.qc_bill_type AS 'reportType',
	n.qc_check_node_name AS "checkNodeName",
	e.realName AS "orderInspectorName",
	e1.realName AS "checkManName",
	k.qc_check_kind_name AS "checkTypeName",
	c.qc_check_item_name AS "checkItemName",
	t.id AS "engineDepartId",
	t.`name` AS "engineDepartName",
	a.create_date AS "createDate",
	(
		SELECT
			realName
		FROM
			biz_employee
		WHERE
			id = (
				SELECT
					a1.groupId
				FROM
					biz_employeegroup a1
				WHERE
					a1.id = a.worker_punish_employeegroup_id
			)
	) AS "workerGroupLeaderName",
	a.worker_punish_amount AS "workerMoney",
	a.worker_punish_score AS "workerScore",
	a.qc_punish_amount AS "inspectorMoney",
	a.qc_punish_score AS "inspectorScore",
	a.pm_punish_score AS "managerScore",
	a.punish_money_amount_real AS "punishMoney",
	tt.worker_punish_amount_old AS "workerMoneyOld",
	tt.worker_punish_score_old AS "workerScoreOld",
	tt.qc_punish_amount_old AS "inspectorMoneyOld",
	tt.qc_punish_score_old AS "inspectorScoreOld",
	tt.pm_punish_score_old AS "managerScoreOld",
	tt.pm_punish_amount_old AS "punishMoneyOld",
	c.id AS "qcCheckItemId",
	j.package_name AS "packageName",
	j.package_stateId AS "packageStateId",
	j.package_statename AS "packageStateName",
	tt.modify_datetime AS "modifyDatetime",
	su.name AS operatorName
FROM
	biz_qc_bill_check_item a 
INNER JOIN (select * from biz_qc_bill_check_item_log as tl   
where  id=(select max(t1.id)  
                  from biz_qc_bill_check_item_log as t1  
                  where tl.qc_bill_check_item_id= t1.qc_bill_check_item_id 
                  )) tt on a.id= tt.qc_bill_check_item_id
LEFT JOIN sys_user su on su.no = tt.create_by
INNER JOIN biz_qc_bill b ON a.qc_bill_id = b.id
	<if test="reportCode!=null and reportCode!=''">
		and b.qc_bill_code =#{reportCode}
	</if>
INNER JOIN biz_qc_check_item c ON a.qc_check_item_id = c.id
	<if test="qcCheckItemId!=null and qcCheckItemId!=''">
			and  c.id= #{qcCheckItemId}
	</if>
LEFT JOIN biz_qc_check_node n ON b.qc_check_node_id = n.id
INNER JOIN biz_order o ON b.order_id = o.id
INNER JOIN biz_engineering_department t ON o.engin_depart_id = t.id
INNER JOIN biz_employee e ON o.order_inspector_id = e.id
INNER JOIN biz_qc_check_kind k ON c.qc_check_kind_id = k.id
LEFT JOIN biz_order_taskpackage j on j.id = a.worker_punish_order_taskpackage_id
INNER JOIN biz_employee e1 ON b.check_employee_id = e1.id
		AND a.is_punish_money = 1
		and b.status not in (-1,0)
	 <if test="storeId !='' and storeId != null">
	 and  o.store_id = #{storeId}
	 </if>
	 <if test="engineDepartId !='' and engineDepartId != null">
	 and  t.id = #{engineDepartId}
	 </if>
	 <if test="managerName !='' and managerName != null">
	 and  o.item_manager like CONCAT('%','${managerName}','%' )  
	 </if>
	 <if test="projectMode !='' and projectMode != null">
	 and  o.project_mode = #{projectMode}
	 </if>
	 <if test="orderNumber !='' and orderNumber != null">
	 and  o.order_number like CONCAT('%','${orderNumber}','%' )  
	 </if>
	 <if test="customerName !='' and customerName != null">
	 and  o.customer_name like CONCAT('%','${customerName}','%' )  
	 </if>
	
	 <if test="orderInspectorName !='' and orderInspectorName != null">
	 and e.realName like CONCAT('%','${orderInspectorName}','%' )  
	 </if>
	 <if test="beginModifyDatetime!=null and beginModifyDatetime!=''">
		AND tt.modify_datetime &gt; #{beginModifyDatetime} 
	</if> 
	<if test="endModifyDatetime!=null and endModifyDatetime!=''">
		AND tt.modify_datetime &lt;   #{beginModifyDatetime} 
	</if> 
	and (a.worker_punish_amount>0 or a.qc_punish_amount>0 or a.punish_money_amount_real>0)
	 order by tt.modify_datetime desc
	</select>

	<select id="findQcNodeInfoByStoreIdAndProjectModeId" resultType="QualityControlFineUpdateEntity">
		SELECT
			c.id as "checkNodeId",
			c.qc_check_node_name as "qcCheckNodeName"
		FROM
			biz_qc_check_node c
		where c.store_id=#{0}
			  and c.project_mode =#{1}


	</select>
	<select id="findIssueTypeByStoreIdAndProjectModeId" resultType="QualityControlFineUpdateEntity">
		SELECT
			t.id as "issueTypeId",
			t.type_name as "typeName"
		FROM
			biz_business_problem_type t
		WHERE
			t.store_id = #{0}
			AND t.project_mode =#{1}
		and t.business_type=3
		and t.del_flag=0


	</select>




	<select id="findIssueDetail" parameterType="String" resultType="java.util.Map">
		SELECT
			a.order_number AS "orderNumber",
			a.customer_name AS "customerName",
			a.order_inspector AS "pqcName",
			a.store_id AS "storeId",
			a.project_mode AS "projectMode",
			d.delay_days as "delayDays",
			CONCAT_WS(
					"-",
					a.community_name,
					a.build_number,
					a.build_unit,
					a.build_room
			) AS "customerInfo",
			a.item_manager AS "managerName",
			c.qc_check_node_name AS "qcCheckNodeName",
			ifnull(
					DATE_FORMAT(
							b.expect_check_datetime,
							'%Y-%m-%d'
					),
					"无"
			) AS "qcExpectCheckDate",
			ifnull(DATE_FORMAT(d.create_date, '%Y-%m-%d'),
				   "无") AS "problemCreateDate",
			t.type_name AS "typeName",
			d.problem_describe as "remarks"
		FROM
			biz_order a
			INNER JOIN biz_qc_bill b ON a.id = b.order_id
										AND b.qc_bill_type = 1
										AND b.is_recheck = 0
			LEFT JOIN biz_qc_check_node c ON b.qc_check_node_id = c.id
			INNER JOIN biz_business_problem d ON d.business_only_mark_int = b.id
												 AND d.business_type = 3
			INNER JOIN biz_business_problem_type t ON d.problem_type_id = t.id

where d.id =#{_parameter}


	</select>
	<select id="findSettleStatus"  resultType="java.lang.String">
		select settle_status from biz_pm_settle_category_detail where 
		order_id=#{orderId} and settle_category=#{settleCategory} and related_business_id=#{relatedBusinessId} and settle_role=#{settleRole}
	</select>
	<update id="updateBizQcBillCheckItem" parameterType="cn.damei.entity.modules.QualityControlFineUpdateEntity">
		update biz_qc_bill_check_item set worker_punish_amount =#{workerMoney},worker_punish_score=#{workerScore},
										  qc_punish_amount =#{inspectorMoney},qc_punish_score=#{inspectorScore},
										  pm_punish_score=#{managerScore},punish_money_amount_real=#{punishMoney}
								      where id=#{checkItemId}
	
	</update>
	<insert id="insertBizQcBillCheckItemLog" parameterType="java.util.Map">
		insert into  biz_qc_bill_check_item_log
			(
				 qc_bill_check_item_id,
				 worker_punish_amount_old,
				 worker_punish_score_old,
				 pm_punish_score_old,
				 qc_punish_score_old,
				 qc_punish_amount_old,
				 modify_datetime,
				 pm_punish_amount_old,
				 create_by,
				 create_date									
			) 
			select id,
				 worker_punish_amount,
				 worker_punish_score,
				 pm_punish_score,
				 qc_punish_score,
				 qc_punish_amount,
				 SYSDATE(),
				 punish_money_amount_real,
				 #{no},
				 SYSDATE()	
			from biz_qc_bill_check_item where id=#{checkedId}
	</insert>
	
	<update id="updateBizPmSettleCategoryDetail" parameterType="cn.damei.entity.modules.BizPmSettleCategoryDetail">
		update biz_pm_settle_category_detail set 
									settle_amount =#{settleAmount},
									settle_status=#{settleStatus}
								where 
								    order_id=#{orderId} and 
								    settle_category=#{settleCategory} and 
								    related_business_id=#{relatedBusinessId} and 
								    settle_role=#{settleRole}
	
	</update>
	<select id="getBizQcBillCheckItemById"  parameterType="String" resultType="QualityControlFineUpdateEntity">
		select 	 worker_punish_amount AS "workerMoney",
				 worker_punish_score AS "workerScore",
				 pm_punish_score AS "managerScore",
				 qc_punish_score AS "inspectorScore",
				 qc_punish_amount AS "inspectorMoney",
				 punish_money_amount_real AS "punishMoney"	
			from biz_qc_bill_check_item where id=#{_parameter} 
	
	</select>
	<insert id="saveCheckitemPicAll" parameterType="java.util.List">
		INSERT INTO biz_business_pic(
			id,
			business_type,
			business_id_int,
			pic_url,
			pic_dateTime,
			del_flag
		)VALUES 
		<foreach collection="list" item="item" index="index" separator="," >
			(
				#{item.id},
				#{item.businessType},
				#{item.businessIdInt},
				#{item.picUrl},
				#{item.picDatetime},
				#{item.delFlag}
			)
		</foreach>
	</insert>
	<select id="findPicListByCheckItemId" resultType="cn.damei.entity.mobile.Manager.BusinessPic">
		select * from biz_business_pic where business_id_int=#{_parameter} and business_type=2
	</select>
	<select id="findPicListCountByCheckItemId" resultType="java.lang.Integer">
		select count(*) from biz_business_pic where business_id_int=#{_parameter} and business_type=2
	</select>
	<delete id="delImgById" parameterType="java.lang.String">
		delete from biz_business_pic where id=#{_parameter}
	</delete>
</mapper>