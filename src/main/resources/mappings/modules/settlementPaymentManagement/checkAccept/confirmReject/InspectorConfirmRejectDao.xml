<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.InspectorConfirmRejectDao">

	<select id="get" resultType="cn.damei.entity.modules.InspectorConfirmReject">
		
		SELECT
			a.id AS "id",
			a.qc_bill_code AS "qcBillCode",
			a.qc_check_node_id AS "qcCheckNodeId",
			a.accept_check_datetime AS "acceptCheckDatetime",
		  	a.review_status AS "reviewStatus",
		  	a.review_remark AS "reviewRemark",
		  	a.review_datetime AS "reviewDatetime",
		  	a.order_id AS "orderId"
		FROM
			biz_qc_bill a
		WHERE a.id = #{id}
		
	</select>
	
	<!-- 约检验收驳回原因查询 -->
	<select id="findList" resultType="cn.damei.entity.modules.InspectorConfirmReject">
		
		SELECT
			a.id AS "id",
			a.qc_bill_code AS "qcBillCode",
			a.qc_check_node_id AS "qcCheckNodeId",
			c.qc_check_node_name AS "qcCheckNodeName",
			a.accept_check_datetime AS "acceptCheckDatetime",
		  	a.review_status AS "reviewStatus",
		  	a.review_remark AS "reviewRemark",
		  	a.review_datetime AS "reviewDatetime",
		  	a.order_id AS "orderId",
			b.store_id AS "storeId",
			e.`name` AS "storeName",
			b.project_mode AS "projectMode",
			g.label AS "projectModeName",
			b.order_number AS "orderNumber",
			b.community_name AS "communityName",
			b.build_number AS "buildNumber",
			b.build_unit AS "buildUnit",
			b.build_room AS "buildRoom",
			b.customer_name AS "customerName",
			b.item_manager AS "itemManager",
			b.order_inspector AS "orderInspector",
			b.engin_depart_id AS "enginDepartId",
			d. NAME AS "departmentName"
		FROM
			biz_qc_bill a
		LEFT JOIN biz_order b ON a.order_id = b.id
		LEFT JOIN biz_qc_check_node c ON a.qc_check_node_id = c.id
		LEFT JOIN biz_engineering_department d ON b.engin_depart_id = d.id
		LEFT JOIN sys_office e ON b.store_id = e.id
		LEFT JOIN (SELECT f.`value`, f.label AS "label" FROM sys_dict f WHERE f.type = 'project_mode' AND f.del_flag = 0) g ON b.project_mode = g.`value`
		<where>
				a.qc_bill_type = 1
			AND a.is_recheck = 0
			AND a.`status` &gt; 5
			AND a.review_remark IS NOT NULL
			AND a.review_remark != ''
			<if test="storeId != null and storeId != ''">
				AND b.store_id = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND b.project_mode = #{projectMode}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND b.order_number LIKE CONCAT('%','${orderNumber}','%' )
			</if>
			<if test="customerName != null and customerName != ''">
				AND b.customer_name LIKE CONCAT('%','${customerName}','%' )
			</if>
			<if test="beginAcceptCheckDatetime != null and beginAcceptCheckDatetime != ''">
				AND a.accept_check_datetime &gt;= #{beginAcceptCheckDatetime}
			</if>
			<if test="endAcceptCheckDatetime != null and endAcceptCheckDatetime != ''">
				AND a.accept_check_datetime &lt;= #{endAcceptCheckDatetime}
			</if>
			<if test="beginReviewDatetime != null and beginReviewDatetime != ''">
				AND a.review_datetime &gt;= #{beginReviewDatetime}
			</if>
			<if test="endReviewDatetime != null and endReviewDatetime != ''">
				AND a.review_datetime &lt;= #{endReviewDatetime}
			</if>
			<if test="enginDepartIds != null">
				AND b.engin_depart_id in
				<foreach item="item" index="index" collection="enginDepartIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.review_datetime DESC
			</otherwise>
		</choose>
	</select>

	

</mapper>