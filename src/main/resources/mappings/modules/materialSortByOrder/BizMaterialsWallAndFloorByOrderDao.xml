<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizMaterialsWallAndFloorByOrderDao">

	<select id="findList"  resultType="cn.damei.entity.modules.BizMaterialsWallAndFloorByOrder">
		select 
		bo.store_id AS storeId,
		bo.id AS orderId,
		bo.order_number AS orderNumber,
		bo.customer_name AS customerName,
		bo.item_manager AS itemManager,
		ifnull(bp.shenqingCishu,0)  applyTimes,
		bo.engin_depart_id AS enginDepartId,
		bp.receive_all_goods_datetime AS finalReceiveTime,
		bp.id AS purchaseId,
		bed.`name` AS enginDepartName,
		bo.update_date,
		bp.`status` AS status
		from biz_order bo
		left join 
		(select order_id,count(*)AS shenqingCishu,purchase_type,receive_all_goods_datetime,id,del_flag,`status`
		from biz_purchase where purchase_type='5'
		GROUP BY order_id) bp 
		on bp.order_id=bo.id
		left join
	    biz_engineering_department bed on bed.id=bo.engin_depart_id
		<where>
			bo.order_status_number&gt;=200
			<if test="purchaseStatusList != null">
				AND bp.`status` IN
				<foreach collection="purchaseStatusList" item="item" open="("  separator="," close=")" index="index">
					#{item}
				</foreach>
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND bo.order_number = #{orderNumber}
			</if>
			<if test="itemManager != null and itemManager != ''">
				AND bo.item_manager LIKE
				<if test="dbName == 'oracle'">'%'||#{itemManager}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemManager}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemManager},'%')</if>
			</if>
			<if test="customerName != null and customerName != ''">
				AND bo.customer_name LIKE
				<if test="dbName == 'oracle'">'%'||#{customerName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customerName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customerName},'%')</if>
			</if>
			<if test="storeId != null and storeId != ''">
				AND bo.store_id = #{storeId}
			</if>
			<if test="enginDepartId != null and enginDepartId != ''">
				AND bo.engin_depart_id = #{enginDepartId}
			</if>
		</where>	
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				order by ${page.orderBy}
			</when>
			<otherwise>
				order by bo.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findByOrderId"  resultType="cn.damei.entity.modules.BizMaterialsWallAndFloorByOrder">
		select 
			bo.store_id AS storeId,
			bo.id AS orderId,
			bo.order_number AS orderNumber,
			bo.customer_name AS customerName,
			bo.item_manager AS itemManager,
			ifnull(bp.shenqingCishu,0)  applyTimes,
			bo.engin_depart_id AS enginDepartId,
			bp.id AS purchaseId,
			bed.`name` AS enginDepartName,
			bo.project_mode AS projectMode,
			bo.order_status_description AS orderStatus,
			bo.customer_address AS customerAddress
		from biz_order bo
		left join 
			(select order_id,count(*)AS shenqingCishu,purchase_type,receive_all_goods_datetime,id,del_flag
			from biz_purchase where purchase_type='5'
			GROUP BY order_id) bp 
			on bp.order_id=bo.id
		left join
		    biz_engineering_department bed on bed.id=bo.engin_depart_id
		where 
			 bo.id=#{orderId}
	</select>
	
	<select id="findHejiByOrderId"  resultType="cn.damei.entity.modules.BizMaterialsWallAndFloorByOrder">
		SELECT
			a.purchase_id AS "purchaseId",
			a.main_mate_type AS "mainMateType",
			a.position AS "position",
			a.brand_combo AS "brands",
			a.model AS "model",
			a.specification AS "specifications",
			a.unit AS "measurementUnit",
			sum(a.count) AS "mainMateCount",
			sum(a.includ_loss_count) AS "includLossCount",
			sum(a.apply_counta) AS "auxiMateCount",
			sum(
				a.received_wall_floor_count
			) AS "receivedAuxiMateCount",
			sum(a.owed_wall_floor_count) AS "owedAuxiMateCount",
			sd.label AS label
		FROM
			biz_purchase bp
		LEFT JOIN biz_purchase_wall_floor_tile a ON a.purchase_id = bp.id
		LEFT JOIN sys_dict sd on sd.`value`=a.main_mate_type
		WHERE
			bp.purchase_type = '5'
		AND bp.`status` != '21'
		AND bp.order_id = #{orderId}
		AND sd.type='main_material_type'
		GROUP BY
			a.main_mate_type,
			a.position,
			a.brand_combo,
			a.model,
			a.specification,
			a.unit;
	</select>
	
	<select id="findMingxiByOrderId"  resultType="cn.damei.entity.modules.BizMaterialsWallAndFloorByOrder">
		SELECT
			bp.purchase_code As purchaseCode,
			bp.apply_receive_time As applyReceiveTime,
			bp.apply_time AS applyTime,
			bp.`status` AS status,
			a.purchase_id AS "purchaseId",
			a.main_mate_type AS "mainMateType",
			a.position AS "position",
			a.brand_combo AS "brands",
			a.model AS "model",
			a.specification AS "specifications",
			a.unit AS "measurementUnit",
			a.count AS "mainMateCount",
			a.includ_loss_count AS "includLossCount",
			a.apply_counta AS "auxiMateCount",
			a.remarks AS "remarks",
			a.received_wall_floor_count AS "receivedAuxiMateCount",
			a.owed_wall_floor_count AS "owedAuxiMateCount",
			sd.label AS label
		FROM
			biz_purchase bp
		LEFT JOIN biz_purchase_wall_floor_tile a ON a.purchase_id = bp.id
		LEFT JOIN sys_dict sd on sd.`value`=a.main_mate_type
		WHERE
			bp.purchase_type = '5'
		AND bp.order_id = #{orderId}
		AND sd.type='main_material_type'
		order by bp.apply_time desc
	</select>
	
	<select id="findPurchaseStatus"  resultType="cn.damei.entity.modules.Dict">
		SELECT
		`value`,
		label
		FROM
		sys_dict
		WHERE
		type = 'purchase_status'
		AND
		VALUE
		IN (40, 70, 90)
	</select>
	
</mapper>