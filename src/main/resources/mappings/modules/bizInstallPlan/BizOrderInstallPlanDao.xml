<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizOrderInstallPlanDao">

    <sql id="bizOrderInstallPlanColumns">
		t.ID AS "id",
		t.ORDER_ID AS "orderId",
		t.ORDER_INSTALL_ITEM_ID AS "orderInstallItemId",
		t.INSTALL_ITEM_NAME AS "installItemName",
		t.INSTALL_ITEM_SEQUENCE AS "installItemSequence",
		t.PLAN_INTO_DATE AS "planIntoDate",
		t.APPLY_INTO_DATE AS "applyIntoDate",
		t.REAL_INTO_DATE AS "realIntoDate",
		t.REAL_COMPLETE_DATE AS "realCompleteDate",
		t.REAL_ACCEPT_DATE AS "realAcceptDate",
		t.STATUS AS "status",
		t.APPLY_INTO_REMARKS AS "applyIntoRemarks",
		t.IS_COMPLETE_DELAY AS "isCompleteDelay",
		t.COMPLETE_DELAY_REASON AS "completeDelayReason",
		t.COMPLETE_DELAY_REMARKS AS "completeDelayRemarks",
		t.REMARKS AS "remarks",
		t.CREATE_BY AS "createBy",
		t.CREATE_DATE AS "createDate",
		t.UPDATE_BY AS "updateBy",
		t.UPDATE_DATE AS "updateDate",
		t.DEL_FLAG AS "delFlag",
		t.APPLY_INTO_CREATE_DATETIME AS "applyIntoCreateDatetime",
		t.supplier_confirm_into_date as "supplierConfirmIntoDate",
		t.supplier_confirm_remarks AS "supplierConfirmRemarks",
		t.install_mode
	</sql>

    <select id="get" resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        <include refid="bizOrderInstallPlanColumns"/>
        FROM BIZ_ORDER_INSTALL_PLAN t
        WHERE t.id = #{id}
    </select>

    <!-- 根据主键查询数据 -->
    <select id="selectByInstallID"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        <include refid="bizOrderInstallPlanColumns"/>
        FROM BIZ_ORDER_INSTALL_PLAN t
        WHERE t.ID = #{id}
    </select>

    <select id="findList" resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        <include refid="bizOrderInstallPlanColumns"/>
        FROM BIZ_ORDER_INSTALL_PLAN a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        <include refid="bizOrderInstallPlanColumns"/>
        FROM BIZ_ORDER_INSTALL_PLAN a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <update id="updateByIdAndStatus">
		update BIZ_ORDER_INSTALL_PLAN set
			STATUS = #{1} ,supplier_confirm_into_date=#{2},supplier_confirm_remarks = #{3}
		WHERE id=#{0}
	</update>

    <select id="findInstallNameByStoreIdAndProjectModeId"
            parameterType="cn.damei.entity.modules.BizProjectInstallItem"
            resultType="cn.damei.entity.modules.BizProjectInstallItem">
        SELECT
        a.id AS "id",
        a.store_id AS "storeId",
        a.project_mode AS "projectMode",
        a.install_item_name AS "installItemName",
        a.install_item_sequence AS "installItemSequence",
        a.is_on AS "isOn"
        FROM
        biz_project_install_item a
        <where>
            a.del_flag = 0
            <if test="storeId != null and storeId != ''">
                AND a.store_id = #{storeId}
            </if>
            <if test="projectMode != null and projectMode != ''">
                AND a.project_mode = #{projectMode}
            </if>
            <if test="isOn != null and isOn != ''">
                AND a.is_on = #{isOn}
            </if>
        </where>


    </select>
    <select id="findUnqualifiedLogList"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        a.id,
        c.store_id,
        c.project_mode,
        c.order_number,
        c.customer_name,
        CONCAT(c.customer_address,'-',c.build_unit,'-',c.build_room,'-',c.build_number) AS 'customerAddressDetaill',
        c.item_manager,
        b.install_item_name,
        a.create_date,
        a.unqualified_reason,
        a.accept_remarks,
        d.name as 'storeName',
        e.label as 'projectModeName',
        a.unqualified_reason_configure as 'unqualifiedReasonConfigure'
        FROM biz_order_install_plan_accept_log a
        INNER JOIN biz_order_install_plan b ON a.order_install_plan_id = b.id
        INNER join biz_order_install_item s on s.id = b.order_install_item_id
        LEFT JOIN biz_order c ON c.id = a.order_id
        LEFT join sys_office d on d.id = c.store_id
        LEFT join sys_dict e on e.value = c.project_mode and e.type = 'project_mode'
        WHERE a.accept_type = '2'
        <if test="projectInstallItemIdList != null and projectInstallItemIdList.size > 0 ">
            AND s.project_install_item_id IN
            <foreach collection="projectInstallItemIdList" item="item" open="(" separator="," close=")" index="index">
                #{item}
            </foreach>
        </if>
        <if test="projectMode != null and projectMode != ''">
            AND c.project_mode = #{projectMode}
        </if>
        <if test="storeId != null and storeId != ''">
            AND c.store_id = #{storeId}
        </if>
        <if test="itemManager != null and itemManager != ''">
            AND c.item_manager = #{itemManager}
        </if>
        <if test="customerName != null and customerName != ''">
            AND c.customer_name = #{customerName}
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            AND c.order_number like concat('%',#{orderNumber},'%')
        </if>
        <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
            AND a.create_date &gt;= #{beginUnqualifiedAcceptTime}
        </if>
        <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
            AND a.create_date &lt;= #{endUnqualifiedAcceptTime}
        </if>
        <if test="unqualifiedReasonConfigure != null and unqualifiedReasonConfigure != ''">
            AND a.unqualified_reason_configure like concat('%',#{unqualifiedReasonConfigure},'%')
        </if>
    </select>
    <select id="findPhone" resultType="String">
        SELECT a.pic_url FROM biz_order_install_plan_pic a WHERE a.order_install_plan_id = #{0}
    </select>
    <select id="findUnPhone" resultType="String">
        SELECT a.pic_url FROM biz_business_pic a WHERE a.business_id_int = #{0} AND a.business_type = #{1}
    </select>
    <select id="findOrderInstallAccept"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        a.id,
        a.order_id,
        d.store_id,
        d.project_mode,
        d.order_number,
        d.customer_name,
        CONCAT(d.customer_address,'-',d.build_unit,'-',d.build_room,'-',d.build_number) AS 'customerAddressDetaill',
        d.item_manager,
        a.install_item_name,
        a.unqualified_accept_time,
        a.unqualified_remarks,
        a.first_pass_rate,
        a.unqualified_times,
        a.unqualified_reason,
        d.engin_depart_id as 'enginDepartId',
        f.label as 'status',
        o.name as 'storeName',
        COUNT(b.id) AS 'unqualifiedTimes'
        FROM biz_order_install_plan a
        LEFT JOIN biz_order_install_plan_accept_log b ON b.order_install_plan_id = a.id and b.accept_type = '2'
        left join biz_order_install_item e on e.id = a.order_install_item_id
        INNER JOIN biz_order d ON a.order_id = d.id
        left join sys_dict f on a.status = f.value and f.type = 'install_status'
        left join sys_office o on o.id = d.store_id
        <where>
            d.id is not null
            <if test="projectInstallItemIdList != null and projectInstallItemIdList.size > 0 ">
                AND e.project_install_item_id IN
                <foreach collection="projectInstallItemIdList" item="item" open="(" separator="," close=")"
                         index="index">
                    #{item}
                </foreach>
            </if>
            <if test="enginDepartId != null and enginDepartId != ''">
                AND d.engin_depart_id = ${enginDepartId}
            </if>
            <if test="projectMode != null and projectMode != ''">
                AND d.project_mode = #{projectMode}
            </if>
            <if test="storeId != null and storeId != ''">
                AND d.store_id = #{storeId}
            </if>
            <if test="itemManager != null and itemManager != ''">
                AND d.item_manager = #{itemManager}
            </if>
            <if test="customerName != null and customerName != ''">
                AND d.customer_name = #{customerName}
            </if>
            <if test="orderNumber != null and orderNumber != ''">
                AND d.order_number = #{orderNumber}
            </if>
            <if test="status == '401'">
                AND a.status in ('4','401')
                <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
                    AND b.create_date &gt;= #{beginUnqualifiedAcceptTime}
                </if>
                <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
                    AND b.create_date &lt;= #{endUnqualifiedAcceptTime}
                </if>
            </if>

            <if test="status == 4">
                AND a.status in (4)
                <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
                    AND a.real_accept_date &gt;= #{beginUnqualifiedAcceptTime}
                </if>
                <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
                    AND a.real_accept_date &lt;= #{endUnqualifiedAcceptTime}
                </if>
            </if>
            <if test="unqualifiedReasonConfigure != null and unqualifiedReasonConfigure != ''">
                AND b.unqualified_reason_configure like concat('%',#{unqualifiedReasonConfigure},'%')
            </if>
        </where>
        group by a.id
        <if test="status == '401'">
            HAVING  COUNT(b.id) > 0
        </if>
        order by b.create_date desc
    </select>

    <select id="getOrderDetail"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        select
            d.store_id,
            d.project_mode,
            d.order_number,
            d.customer_name,
            CONCAT(d.customer_address,'-',d.build_unit,'-',d.build_room,'-',d.build_number) AS 'customerAddressDetaill',
            d.item_manager
        from biz_order d
        where d.id = #{orderId}
    </select>
    <select id="findItemPlanLog"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        b.install_item_name,
        a.create_date as 'unqualifiedAcceptTime',
        a.unqualified_reason,
        a.unqualified_reason_id AS "unqualifiedReasonId",
        a.unqualified_reason_configure AS "unqualifiedReasonConfigure",
        a.accept_remarks,
        a.id
        FROM biz_order_install_plan_accept_log a
        LEFT JOIN biz_order_install_plan b
        ON a.order_install_plan_id = b.id
        WHERE a.order_install_plan_id =#{id}
        and a.accept_type= '2'
        <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
            AND a.create_date &gt;= #{beginUnqualifiedAcceptTime}
        </if>
        <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
            AND a.create_date &lt;= #{endUnqualifiedAcceptTime}
        </if>
        ORDER BY b.install_item_sequence,a.create_date DESC
    </select>

    <select id="findUnqualifiedInstallItemCount"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
        c.store_id,
        c.project_mode,
        b.install_item_name,
        COUNT(a.id) as 'unqualifiedInstallItemCount'
        FROM biz_order_install_plan_accept_log a
        LEFT JOIN biz_order_install_plan b
        ON a.order_install_plan_id = b.id
        inner join biz_order_install_item f on f.id = b.order_install_item_id
        LEFT JOIN biz_order c
        ON c.id = a.order_id
        WHERE a.accept_type = '2'
        <if test="projectMode != null and projectMode != ''">
            AND c.project_mode = #{projectMode}
        </if>
        <if test="storeId != null and storeId != ''">
            AND c.store_id = #{storeId}
        </if>
        <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
            AND a.create_date &gt;= #{beginUnqualifiedAcceptTime}
        </if>
        <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
            AND a.create_date &lt;= #{endUnqualifiedAcceptTime}
        </if>
        <if test="projectInstallItemIdList != null">
            AND f.project_install_item_id IN
            <foreach collection="projectInstallItemIdList" item="item" open="(" separator="," close=")" index="index">
                #{item}
            </foreach>
        </if>
        GROUP BY b.install_item_sequence,c.store_id,c.project_mode
    </select>
    <select id="findUnqualifiedResonCount"
            resultType="cn.damei.entity.modules.BizOrderInstallPlan">
        SELECT
            b.store_id AS "storeId",
            b.project_mode AS "projectMode",
            c.main_materials_install_item AS "installItemName",
            (
                CASE
                    WHEN c.del_flag = "1" THEN CONCAT(a.unqualified_reason_configure,"【删除】")
                    WHEN c.del_flag = "0" AND c.`status` = "0" THEN CONCAT(a.unqualified_reason_configure,"【停用】")
                    ELSE a.unqualified_reason_configure
                END
            ) AS "unqualifiedReasonConfigure",
            COUNT(a.id) AS "unqualifiedInstallItemCount"
        FROM
            biz_order_install_plan_accept_log a
        LEFT JOIN biz_order b ON a.order_id = b.id
        LEFT JOIN biz_main_materials_unqualified_reason c ON a.unqualified_reason_id = c.id
        <where>
            a.accept_type = 2
            <if test="projectMode != null and projectMode != ''">
                AND b.project_mode = #{projectMode}
            </if>
            <if test="storeId != null and storeId != ''">
                AND b.store_id = #{storeId}
            </if>
            <if test="beginUnqualifiedAcceptTime != null and beginUnqualifiedAcceptTime != ''">
                AND a.create_date &gt;= #{beginUnqualifiedAcceptTime}
            </if>
            <if test="endUnqualifiedAcceptTime != null and endUnqualifiedAcceptTime != ''">
                AND a.create_date &lt;= #{endUnqualifiedAcceptTime}
            </if>
            <if test="unqualifiedReasonConfigure != null and unqualifiedReasonConfigure != ''">
                AND (
                    CASE
                        WHEN c.del_flag = "1" THEN CONCAT(a.unqualified_reason_configure,"【删除】")
                        WHEN c.del_flag = "0" AND c.`status` = "0" THEN CONCAT(a.unqualified_reason_configure,"【停用】")
                        ELSE a.unqualified_reason_configure
                    END
                ) like concat('%',#{unqualifiedReasonConfigure},'%')
            </if>
            <if test="projectInstallItemIdList != null">
                AND c.main_materials_install_item_id IN
                <foreach collection="projectInstallItemIdList" item="item" open="(" separator="," close=")" index="index">
                    #{item}
                </foreach>
            </if>
            GROUP BY a.unqualified_reason_id,a.unqualified_reason
            ORDER BY unqualifiedInstallItemCount DESC,b.store_id ASC,b.project_mode ASC,c.main_materials_install_item_id ASC
        </where>
    </select>
</mapper>