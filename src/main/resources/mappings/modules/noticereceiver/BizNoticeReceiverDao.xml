<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizNoticeReceiverDao">
    
	<sql id="bizNoticeReceiverColumns">
		a.id AS "id",
		a.notice_id AS "noticeId",
		a.receiver_type AS "receiverType",
		a.receiver_role AS "receiverRole",
		a.receiver_employee_id AS "receiverEmployeeId",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="bizNoticeReceiverJoins">
	</sql>
    
	<select id="get" resultType="cn.damei.entity.modules.BizNoticeReceiver">
		SELECT 
			<include refid="bizNoticeReceiverColumns"/>
		FROM biz_notice_receiver a
		<include refid="bizNoticeReceiverJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="queryNoticeReceiverEmployee" parameterType="java.lang.Integer" resultType="cn.damei.entity.modules.DropModel">
		select a.receiver_employee_id as "value",CONCAT(b.realName,'-',b.phone) as "label"
		from biz_notice_receiver a left join biz_employee b on a.receiver_employee_id = b.id
		where a.notice_id = #{noticeId} and (receiver_role is null or receiver_role = '')
	</select>
	
	<select id="findList" resultType="cn.damei.entity.modules.BizNoticeReceiver">
		SELECT 
			<include refid="bizNoticeReceiverColumns"/>
		FROM biz_notice_receiver a
		<include refid="bizNoticeReceiverJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="cn.damei.entity.modules.BizNoticeReceiver">
		SELECT 
			<include refid="bizNoticeReceiverColumns"/>
		FROM biz_notice_receiver a
		<include refid="bizNoticeReceiverJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_notice_receiver(
			id,
			notice_id,
			receiver_type,
			receiver_role,
			receiver_employee_id,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{noticeId},
			#{receiverType},
			#{receiverRole},
			#{receiverEmployeeId},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE biz_notice_receiver SET 	
			notice_id = #{noticeId},
			receiver_type = #{receiverType},
			receiver_role = #{receiverRole},
			receiver_employee_id = #{receiverEmployeeId},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		delete from biz_notice_receiver
		WHERE id = #{id}
	</delete>

	<delete id="deleteByNoticeId">
		delete from biz_notice_receiver
		WHERE notice_id = #{noticeId}
	</delete>

	<!--批量新增-->
	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO biz_notice_receiver(
			id,
			notice_id,
			receiver_type,
			receiver_role,
			receiver_employee_id,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id},
			#{item.noticeId},
			#{item.receiverType},
			#{item.receiverRole},
			#{item.receiverEmployeeId},
			#{item.remarks},
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.delFlag})
		</foreach>
	</insert>

	<select id="queryNoticeReceiverByNoticeId" parameterType="java.lang.Integer" resultType="java.lang.String">
		select c.realName
		from biz_notice_receiver a left join biz_employee c on a.receiver_employee_id = c.id
		where a.notice_id = #{noticeId} and a.receiver_employee_id not in(select b.view_employee_id from biz_notice_view_log b where b.notice_id = #{noticeId})
	</select>
</mapper>