<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizEmployeeBankcardRelatedIdcardDao">
    
	<sql id="bizEmployeeBankcardRelatedIdcardColumns">
		a.id AS "id",
		a.employee_bankcard_id AS "employeeBankcardId",
		a.related_idcard_no AS "relatedIdcardNo",
		a.related_name AS "relatedName",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="bizEmployeeBankcardRelatedIdcardJoins">
	</sql>
    
	<select id="get" resultType="cn.damei.entity.modules.BizEmployeeBankcardRelatedIdcard">
		SELECT 
			<include refid="bizEmployeeBankcardRelatedIdcardColumns"/>
		FROM biz_employee_bankcard_related_idcard a
		<include refid="bizEmployeeBankcardRelatedIdcardJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="cn.damei.entity.modules.BizEmployeeBankcardRelatedIdcard">
		SELECT 
			<include refid="bizEmployeeBankcardRelatedIdcardColumns"/>
		FROM biz_employee_bankcard_related_idcard a
		<include refid="bizEmployeeBankcardRelatedIdcardJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="cn.damei.entity.modules.BizEmployeeBankcardRelatedIdcard">
		SELECT 
			<include refid="bizEmployeeBankcardRelatedIdcardColumns"/>
		FROM biz_employee_bankcard_related_idcard a
		<include refid="bizEmployeeBankcardRelatedIdcardJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_employee_bankcard_related_idcard(
			id,
			employee_bankcard_id,
			related_idcard_no,
			related_name,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{employeeBankcardId},
			#{relatedIdcardNo},
			#{relatedName},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE biz_employee_bankcard_related_idcard SET 	
			employee_bankcard_id = #{employeeBankcardId},
			related_idcard_no = #{relatedIdcardNo},
			related_name = #{relatedName},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_employee_bankcard_related_idcard SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!--根据员工id查询关联身份证-->
	<select id="queryEmployeeBankcardRelatedIdcardByEmpId" parameterType="java.lang.Integer" resultType="cn.damei.entity.modules.BizEmployeeBankcardRelatedIdcard">
		select 
			<include refid="bizEmployeeBankcardRelatedIdcardColumns"/>
		 from biz_employee_bankcard_related_idcard a where a.employee_bankcard_id = (select b.id from biz_employee_bankcard b where b.emp_id = #{empId} and b.del_flag = '0')
	</select>
</mapper>