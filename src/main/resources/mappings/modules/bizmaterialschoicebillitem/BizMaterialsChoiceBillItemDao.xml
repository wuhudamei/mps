<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizMaterialsChoiceBillItemDao">
    
	<sql id="bizMaterialsChoiceBillItemColumns">
		a.id AS "id",
		a.materials_choice_bill_id AS "materialsChoiceBillId",
		a.materials_choice_type AS "materialsChoiceType",
		a.materials_choice_category_code AS "materialsChoiceCategoryCode",
		a.brand AS "brand",
		a.model AS "model",
		a.attribute AS "attribute",
		a.unit AS "unit",
		a.spec AS "spec",
		a.position AS "position",
		a.budget_number_1 AS "budgetNumber1",
		a.budget_number_2 AS "budgetNumber2",
		a.loss_ratio AS "lossRatio",
		a.include_loss_number AS "includeLossNumber",
		a.unit_price AS "unitPrice",
		a.total_amount AS "totalAmount",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.supplier_name AS "supplierName",
		a.supplier_no AS "supplierNo"
	</sql>
	
	<sql id="bizMaterialsChoiceBillItemJoins">
	</sql>
    
	<select id="get" resultType="cn.damei.entity.modules.BizMaterialsChoiceBillItem">
		SELECT 
			<include refid="bizMaterialsChoiceBillItemColumns"/>
		FROM biz_materials_choice_bill_item a
		<include refid="bizMaterialsChoiceBillItemJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="cn.damei.entity.modules.BizMaterialsChoiceBillItem">
		SELECT 
			a.id AS "id",
			a.materials_choice_bill_id AS "materialsChoiceBillId",
			a.materials_choice_type AS "materialsChoiceType",
			a.materials_choice_category_code AS "materialsChoiceCategoryCode",
			a.brand AS "brand",
			a.model AS "model",
			a.attribute AS "attribute",
			a.unit AS "unit",
			a.spec AS "spec",
			a.position AS "position",
			a.budget_number_1 AS "budgetNumber1",
			a.budget_number_2 AS "budgetNumber2",
			a.loss_ratio AS "lossRatio",
			a.include_loss_number AS "includeLossNumber",
			a.unit_price AS "unitPrice",
			a.total_amount AS "totalAmount",
			a.supplier_name AS "supplierName",
			a.supplier_no AS "supplierNo",
			b.category_name AS "categoryName"
		FROM biz_materials_choice_bill_item a
		LEFT JOIN biz_materials_choice_category b ON b.category_code = a.materials_choice_category_code AND b.category_level = 2
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="materialsChoiceBillId != null and materialsChoiceBillId != ''">
				AND a.materials_choice_bill_id = #{materialsChoiceBillId}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="cn.damei.entity.modules.BizMaterialsChoiceBillItem">
		SELECT 
			<include refid="bizMaterialsChoiceBillItemColumns"/>
		FROM biz_materials_choice_bill_item a
		<include refid="bizMaterialsChoiceBillItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_materials_choice_bill_item(
			id,
			materials_choice_bill_id,
			materials_choice_type,
			materials_choice_category_code,
			brand,
			model,
			attribute,
			unit,
			spec,
			position,
			budget_number_1,
			budget_number_2,
			loss_ratio,
			include_loss_number,
			unit_price,
			total_amount,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			supplier_name,
			supplier_no
		) VALUES (
			#{id},
			#{materialsChoiceBillId},
			#{materialsChoiceType},
			#{materialsChoiceCategoryCode},
			#{brand},
			#{model},
			#{attribute},
			#{unit},
			#{spec},
			#{position},
			#{budgetNumber1},
			#{budgetNumber2},
			#{lossRatio},
			#{includeLossNumber},
			#{unitPrice},
			#{totalAmount},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{supplierName},
			#{supplierNo}
			
		)
	</insert>
	
	
	<update id="update">
		UPDATE biz_materials_choice_bill_item SET 	
			materials_choice_bill_id = #{materialsChoiceBillId},
			materials_choice_type = #{materialsChoiceType},
			materials_choice_category_code = #{materialsChoiceCategoryCode},
			brand = #{brand},
			model = #{model},
			attribute = #{attribute},
			unit = #{unit},
			spec = #{spec},
			position = #{position},
			budget_number_1 = #{budgetNumber1},
			budget_number_2 = #{budgetNumber2},
			loss_ratio = #{lossRatio},
			include_loss_number = #{includeLossNumber},
			unit_price = #{unitPrice},
			total_amount = #{totalAmount},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			supplier_name = #{supplierName},
			supplier_no = #{supplierNo},
			
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_materials_choice_bill_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 删除选材单材料 -->
	<delete id="deleteMaterialsChoiceBillItem" parameterType="int">
		DELETE
		FROM
			biz_materials_choice_bill_item
		WHERE
			materials_choice_bill_id = #{0}
	
	</delete>
	
	<!--批量保存材料单材料-->
	<insert id="insertMaterialsChoiceBillItemList" parameterType="java.util.List">
		INSERT INTO biz_materials_choice_bill_item(
			materials_choice_bill_id,
			materials_choice_type,
			materials_choice_category_code,
			brand,
			model,
			
			attribute,
			unit,
			spec,
			position,
			budget_number_1,
			budget_number_2,
			
			loss_ratio,
			include_loss_number,
			unit_price,
			total_amount,
			remarks,
			
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			supplier_name,
			supplier_no
			
		) VALUES 
		<foreach collection="list" item="item" index="index" separator="," >
			(
				#{item.materialsChoiceBillId},
				#{item.materialsChoiceType},
				#{item.materialsChoiceCategoryCode},
				#{item.brand},
				#{item.model},
				
				#{item.attribute},
				#{item.unit},
				#{item.spec},
				#{item.position},
				#{item.budgetNumber1},
				#{item.budgetNumber2},
				
				#{item.lossRatio},
				#{item.includeLossNumber},
				#{item.unitPrice},
				#{item.totalAmount},
				#{item.remarks},
				
				#{item.createBy.id},
				#{item.createDate},
				#{item.updateBy.id},
				#{item.updateDate},
				#{item.delFlag},
				#{item.supplierName},
				#{item.supplierNo}
				
			
			)
		</foreach>
	</insert>
	
	<!-- 选材类目明细查询 -->
	<select id="findMaterialsList" resultType="cn.damei.entity.modules.BizMaterialsChoiceBillItem">
		
		SELECT
			a.id AS "id",
			a.materials_choice_bill_id AS "materialsChoiceBillId",
			a.materials_choice_type AS "materialsChoiceType",
			a.materials_choice_category_code AS "materialsChoiceCategoryCode",
			a.brand AS "brand",
			a.model AS "model",
			a.attribute AS "attribute",
			a.unit AS "unit",
			a.spec AS "spec",
			a.position AS "position",
			a.budget_number_1 AS "budgetNumber1",
			a.budget_number_2 AS "budgetNumber2",
			a.loss_ratio AS "lossRatio",
			a.include_loss_number AS "includeLossNumber",
			a.supplier_name AS "supplierName",
			a.supplier_no AS "supplierNo",
			c.store_id AS "storeId",
			c.order_number AS "orderNumber",
			c.customer_name AS "customerName",
			d.`name` AS "storeName",
			e.category_name AS "categoryName",
			f.category_name AS "firstCategoryName",
			f.category_code AS "firstMaterialsChoiceCategoryCode"
		FROM
			biz_materials_choice_bill_item a
		LEFT JOIN biz_materials_choice_bill b ON a.materials_choice_bill_id = b.id
		LEFT JOIN biz_order c ON c.order_number = b.order_number
		LEFT JOIN sys_office d ON d.id = c.store_id AND d.del_flag = 0
		LEFT JOIN biz_materials_choice_category e ON e.category_code = a.materials_choice_category_code AND e.category_level = 2 AND e.del_flag = 0
		LEFT JOIN biz_materials_choice_category f ON f.id = e.parent_id AND f.category_level = 1 AND f.del_flag = 0
		
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="storeId != null and storeId != ''">
				AND c.store_id = #{storeId}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND c.order_number LIKE CONCAT('%','${orderNumber}','%' )
			</if>
			<if test="customerName != null and customerName != ''">
				AND c.customer_name LIKE CONCAT('%','${customerName}','%' )
			</if>
			<if test="firstMaterialsChoiceCategoryCode != null and firstMaterialsChoiceCategoryCode != ''">
				AND f.category_code = #{firstMaterialsChoiceCategoryCode}
			</if>
			<if test="materialsChoiceCategoryCode != null and materialsChoiceCategoryCode != ''">
				AND e.category_code = #{materialsChoiceCategoryCode}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<!-- 查询类目列表（一级） -->
	<select id="findFirstMaterialsChoiceCategory" parameterType="cn.damei.entity.modules.BizMaterialsChoiceCategory" resultType="cn.damei.entity.modules.BizMaterialsChoiceCategory">
		SELECT
			a.category_code AS "categoryCode",
			a.category_name AS "categoryName"
		FROM
			biz_materials_choice_category a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="categoryLevel != null and categoryLevel != ''">
				AND a.category_level = #{categoryLevel}
			</if>
		</where>
	
	
	
	</select> 
	
	<!-- 查询类目列表（二级） -->
	<select id="findSecondMaterialsChoiceCategory" parameterType="cn.damei.entity.modules.BizMaterialsChoiceCategory" resultType="cn.damei.entity.modules.BizMaterialsChoiceCategory">
		SELECT
			b.category_code AS "categoryCode",
			b.category_name AS "categoryName"
		FROM
			biz_materials_choice_category a
		LEFT JOIN biz_materials_choice_category b ON b.parent_id = a.id
		<where>
			b.del_flag = #{DEL_FLAG_NORMAL}
			<if test="categoryLevel != null and categoryLevel != ''">
				AND b.category_level = #{categoryLevel}
			</if>
			<if test="categoryCode != null and categoryCode != ''">
				AND a.category_code = #{categoryCode}
			</if>
		</where>
	
	
	
	</select> 
</mapper>