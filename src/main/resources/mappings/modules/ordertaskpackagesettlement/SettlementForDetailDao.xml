<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.SettlementForDetailDao">
	<select id="findList" resultType="cn.damei.entity.modules.SettlementForDetail">
		SELECT
			a.id AS "id",
			a.store_id AS "storeId",
			b.project_mode AS "projectMode",
			a.settlement_no AS "settlementNo",
			a.status AS "status",
			a.order_taskpackage_id AS "orderTaskpackageId",
			a.settlement_amount AS "settlementAmount",
			a.check_date AS "checkDate",
			a.create_date AS "createDate",
			b.package_name AS "packageName",
			b.order_task_package_code AS "orderTaskpackageCode",
			b.group_realname AS "groupRealname",
			b.group_id AS "groupId",
			b.item_customer AS "itemCustomer",
			b.item_manager_id AS "itemManagerId",
			b.customer_name as "customerName",
			b.customer_message AS "customerMessage",
			c.order_number AS "orderNumber",
			c.community_name AS "communityName",
			a.ensure_amount_datetime AS "approveSalaryTime",
			e.budgetAmount as "budgetAmount",
			nn.name as "departmentName"
		FROM
			biz_order_taskpackage_settlement a
		INNER JOIN biz_order_taskpackage b ON a.order_taskpackage_id = b.id
		inner join biz_order mm on mm.id = b.order_id
		inner join biz_engineering_department nn on nn.id = mm.engin_depart_id
		INNER JOIN (SELECT
				CONVERT(sum(
					budget_number * synthesize_price
				),decimal) as "budgetAmount" ,taskpackage_id 
			FROM
				biz_order_taskpackage_procedure
			GROUP BY taskpackage_id
			) e on e.taskpackage_id = b.id
		INNER JOIN biz_order c ON c.id = b.order_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="storeId != null and storeId != ''">
				AND a.store_id = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
			   AND b.project_mode =#{projectMode}
			</if>
			<if test="settlementNo != null and settlementNo != ''">
				AND a.settlement_no LIKE 
					<if test="dbName == 'oracle'">'%'||#{settlementNo}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{settlementNo}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{settlementNo},'%')</if>
			</if>
			<if test="packageName != null and packageName != ''">
				AND b.package_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{packageName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{packageName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{packageName},'%')</if>
			</if>
			<if test="groupRealname != null and groupRealname != ''">
				AND b.group_realname LIKE
					<if test="dbName == 'oracle'">'%'||#{groupRealname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{groupRealname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{groupRealname},'%')</if>
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND c.order_number LIKE
					<if test="dbName == 'oracle'">'%'||#{orderNumber}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{orderNumber}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{orderNumber},'%')</if>
			</if>
			<if test="customerName != null and customerName != ''">
				AND b.customer_name LIKE
					<if test="dbName == 'oracle'">'%'||#{customerName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{customerName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{customerName},'%')</if>
			</if>
			<if test="itemCustomer != null and itemCustomer != ''">
				AND b.item_customer LIKE
					<if test="dbName == 'oracle'">'%'||#{itemCustomer}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemCustomer}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemCustomer},'%')</if>
			</if>
			<if test="communityName != null and communityName != ''">
				AND c.community_name LIKE
					<if test="dbName == 'oracle'">'%'||#{communityName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{communityName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{communityName},'%')</if>
			</if>
			<if test="statusList != null">
				AND a.status in
				<foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
              	  #{item}
           		</foreach>
			</if>
			<if test="enginDepartIds != null">
				AND mm.engin_depart_id in
				<foreach item="item" index="index" collection="enginDepartIds" open="(" separator="," close=")">
              	  #{item}
           		</foreach>
			</if>
			<if test="beginApproveSalaryTime != null and beginApproveSalaryTime !='' and endApproveSalaryTime != null and endApproveSalaryTime != ''">
				AND a.ensure_amount_datetime BETWEEN #{beginApproveSalaryTime} AND #{endApproveSalaryTime}
			</if>
			<if test="beginCheckDate != null and beginCheckDate !='' and endCheckDate != null and endCheckDate != ''">
				AND a.check_date BETWEEN #{beginCheckDate} AND #{endCheckDate}
			</if>
			<if test="beginCreateDate != null and beginCreateDate !='' and endCreateDate != null and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
		</where>
		ORDER BY
			a.create_date DESC
	</select>
</mapper>