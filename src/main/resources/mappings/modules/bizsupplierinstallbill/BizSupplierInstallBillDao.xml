<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BizSupplierInstallBillDao">
    
	<sql id="bizSupplierInstallBillColumns">
		a.id AS "id",
		a.install_bill_code AS "installBillCode",
		a.order_install_plan_id AS "orderInstallPlanId",
		a.supplier_id AS "supplierId",
		a.supplier_confirm_into_date AS "supplierConfirmIntoDate",
		a.supplier_confirm_complete_date AS "supplierConfirmCompleteDate",
		a.status AS "status",
		a.status_datetime AS "statusDatetime",
		a.real_into_date AS "realIntoDate",
		a.real_complete_date AS "realCompleteDate",
		a.real_accept_date AS "realAcceptDate",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="bizSupplierInstallBillJoins">
	</sql>
    
	<select id="get" resultType="cn.damei.entity.modules.BizSupplierInstallBill">
		SELECT 
			<include refid="bizSupplierInstallBillColumns"/>
		FROM biz_supplier_install_bill a
		<include refid="bizSupplierInstallBillJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="getnot90" resultType="cn.damei.entity.modules.BizSupplierInstallBill">
		SELECT 
			<include refid="bizSupplierInstallBillColumns"/>
		FROM biz_supplier_install_bill a
		<include refid="bizSupplierInstallBillJoins"/>
		WHERE a.order_install_plan_id = #{orderInstallPlanId} and a.status!='90'
	</select>
	
	<select id="findList" resultType="cn.damei.entity.modules.BizSupplierInstallBill">
		SELECT
			a.id AS "installBillId",
			a.install_bill_code AS "installBillCode",
			a.order_install_plan_id AS "orderInstallPlanId",
			a.supplier_id AS "supplierId",
			a.supplier_confirm_into_date AS "supplierConfirmIntoDate",
			a.supplier_confirm_complete_date AS "supplierConfirmCompleteDate",
			a. STATUS AS "status",
			j.label AS "statusName",
			a.status_datetime AS "statusDatetime",
			a.create_date AS "createDate",
			c.store_id AS "storeId",
			d.`name` AS "storeName",
			c.detail_address AS "detailAddress",
			c.community_name AS "communityName",
			c.build_number AS "buildNumber",
			c.build_unit AS "buildUnit",
			c.build_room AS "buildRoom",
			c.customer_name AS "customerName",
			c.customer_phone AS "customerPhone",
			c.item_manager_id AS "itemManagerId",
			e.realName AS "itemManagerName",
			e.phone AS "itemManagerPhone",
			b.id AS "installPlanId",
			b.install_item_name AS "installItemName",
			b.supplier_confirm_remarks AS "supplierConfirmRemarks",
			b.plan_into_date AS "planIntoDate",
			b.plan_complete_date AS "planCompleteDate",
			f.id AS "installConstructBillId",
			f.employee_group_id AS "employeeGroupId",
			h.realName AS "employeeGroupName",
			h.phone AS "employeeGroupPhone",
			k.project_install_item_id AS "projectInstallItemId"
		FROM
			biz_supplier_install_bill a
		LEFT JOIN biz_order_install_plan b ON a.order_install_plan_id = b.id
		LEFT JOIN biz_order c ON b.order_id = c.id
		LEFT JOIN sys_office d ON c.store_id = d.id
		LEFT JOIN biz_employee e ON c.item_manager_id = e.id
		LEFT JOIN biz_supplier_install_construct_bill f ON f.supplier_install_bill_id = a.id AND f.`status` != 90
		LEFT JOIN biz_employeegroup g ON f.employee_group_id = g.id
		LEFT JOIN biz_employee h ON g.groupId = h.id
		LEFT JOIN sys_dict j ON j.`value` = a.`status` AND j.type = 'supplier_install_bill_status' AND j.del_flag = 0
		LEFT JOIN biz_order_install_item k ON b.order_install_item_id = k.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<!-- AND a.`status` != 90 -->
			<if test="storeId != null and storeId != ''">
				AND c.store_id = #{storeId}
			</if>
			<if test="employeeGroupName != null and employeeGroupName != ''">
				AND h.realName = #{employeeGroupName}
			</if>
			<if test="customerName != null and customerName != ''">
				AND c.customer_name LIKE CONCAT('%','${customerName}','%' )
			</if>
			<if test="itemManagerName != null and itemManagerName != ''">
				AND e.realName LIKE CONCAT('%','${itemManagerName}','%' )
			</if>
			<if test="supplierId != null and supplierId != ''">
				AND a.supplier_id = #{supplierId}
			</if>
			<if test="projectInstallItemId != null and projectInstallItemId != ''">
				AND k.project_install_item_id = #{projectInstallItemId}
			</if>
			<if test="installBillCode != null and installBillCode != ''">
				AND a.install_bill_code LIKE CONCAT('%','${installBillCode}','%' )
			</if>
			<if test="beginCreateDate != null and beginCreateDate != ''">
				AND a.create_date &gt;= #{beginCreateDate}
			</if>
			<if test="endCreateDate != null and endCreateDate != ''">
				AND a.create_date &lt;= #{endCreateDate}
			</if>
			<if test="installBillStatusList != null">
				AND a.`status` IN 
				<foreach collection="installBillStatusList" item="item" open="("  separator="," close=")" index="index">
					#{item}
				</foreach>
			</if>
			<if test="supplierIdList != null">
				AND a.supplier_id IN 
				<foreach collection="supplierIdList" item="item" open="("  separator="," close=")" index="index">
					#{item}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="cn.damei.entity.modules.BizSupplierInstallBill">
		SELECT 
			<include refid="bizSupplierInstallBillColumns"/>
		FROM biz_supplier_install_bill a
		<include refid="bizSupplierInstallBillJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO biz_supplier_install_bill(
			id,
			install_bill_code,
			order_install_plan_id,
			supplier_id,
			supplier_confirm_into_date,
			supplier_confirm_complete_date,
			status,
			status_datetime,
			real_into_date,
			real_complete_date,
			real_accept_date,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{installBillCode},
			#{orderInstallPlanId},
			#{supplierId},
			#{supplierConfirmIntoDate},
			#{supplierConfirmCompleteDate},
			#{status},
			#{statusDatetime},
			#{realIntoDate},
			#{realCompleteDate},
			#{realAcceptDate},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE biz_supplier_install_bill SET 	
			install_bill_code = #{installBillCode},
			order_install_plan_id = #{orderInstallPlanId},
			supplier_id = #{supplierId},
			supplier_confirm_into_date = #{supplierConfirmIntoDate},
			supplier_confirm_complete_date = #{supplierConfirmCompleteDate},
			status = #{status},
			status_datetime = #{statusDatetime},
			real_into_date = #{realIntoDate},
			real_complete_date = #{realCompleteDate},
			real_accept_date = #{realAcceptDate},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_supplier_install_bill SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	
	<!-- 查询供应商列表 -->
	<select id="findSupplierList" parameterType="cn.damei.entity.modules.EnginInstallSupplier" resultType="cn.damei.entity.modules.EnginInstallSupplier">
		SELECT
			a.id AS "supplierId",
			a.supplier_name AS "supplierName",
			a.contacts AS "supplierContacts",
			a.contacts_phone AS "supplierContactsPhone"
		FROM
			biz_supplier a
		INNER JOIN (
			SELECT
				b.supplier_id
			FROM
				biz_project_install_item_supplier b
			GROUP BY
				b.supplier_id
		) m ON m.supplier_id = a.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="supplierContactsPhone != null and supplierContactsPhone != ''">
				AND a.contacts_phone = #{supplierContactsPhone}
			</if>
		</where>
	</select>
	
	<!-- 根据供应商加载安装项列表 -->
	<select id="findProjectInstallItemList" parameterType="int" resultType="cn.damei.entity.modules.BizProjectInstallItem">
	
		SELECT
			a.id AS "id",
			a.install_item_name AS "installItemName"
		FROM
			biz_project_install_item a
		INNER JOIN (
			SELECT
				b.project_install_item_id
			FROM
				biz_project_install_item_supplier b
			WHERE b.supplier_id = #{0}
			GROUP BY
				b.project_install_item_id
		) m ON m.project_install_item_id = a.id
		WHERE
			a.del_flag = 0
		
	
	
	</select>
	
	<!-- 更新安装单   确认工期 -->
	<update id="updateSupplierConfirmDate">
		UPDATE biz_supplier_install_bill SET 	
			supplier_confirm_into_date = #{supplierConfirmIntoDate},
			supplier_confirm_complete_date = #{supplierConfirmCompleteDate},
			status = #{status},
			status_datetime = #{statusDatetime},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<!-- 查询工人组 -->
	<select id="findInstallWorkerList" parameterType="cn.damei.entity.modules.SupplierInstallWorker" resultType="cn.damei.entity.modules.SupplierInstallWorker">
		SELECT
	
			c.id AS "employeegroupId",
			d.realName AS "workerName",
			d.phone AS "workerPhone",
			IFNULL(m.workerNumber,0) AS "workerNumber",
			IFNULL(n.supplierInstallConstrunctBillCount,0) AS "supplierInstallConstrunctBillCount",
			c.address AS "address",
			(
				round(
					6378.138 * 2 * asin(
						sqrt(
							pow(
								sin(
									(
										SUBSTRING_INDEX(c.pointXy, ',', 1) * pi() / 180 - SUBSTRING_INDEX(h.map_coordinate, ',', - 1) * pi() / 180
									) / 2
								),
								2
							) + cos(
								SUBSTRING_INDEX(c.pointXy, ',', 1) * pi() / 180
							) * cos(
								SUBSTRING_INDEX(h.map_coordinate, ',', - 1) * pi() / 180
							) * pow(
								sin(
									(
										SUBSTRING_INDEX(c.pointXy, ',' ,- 1) * pi() / 180 - SUBSTRING_INDEX(h.map_coordinate, ',', 1) * pi() / 180
									) / 2
								),
								2
							)
						)
					) * 1000
				) / 1000
			) AS "distance"
		FROM
			biz_supplier_install_bill a
		INNER JOIN biz_supplier_employee_group b ON a.supplier_id = b.supplier_id AND b.del_flag = 0
		INNER JOIN biz_employeegroup c ON b.employee_group_id = c.id
		AND c.orderStop = 0
		AND c.state = 0
		LEFT JOIN biz_employee d ON c.groupId = d.id
		LEFT JOIN (
			SELECT
				e.groupId,
				COUNT(1) AS "workerNumber"
			FROM
				biz_emgrouprelation e
			GROUP BY
				e.groupId
		) m ON m.groupId = c.id
		LEFT JOIN (
			SELECT
				f.employee_group_id,
				COUNT(1) AS "supplierInstallConstrunctBillCount"
			FROM
				biz_supplier_install_construct_bill f
			WHERE
				f.`status` IN (10, 20, 30)
			GROUP BY
				f.employee_group_id
		) n ON c.id = n.employee_group_id
		LEFT JOIN biz_order_install_plan g ON a.order_install_plan_id = g.id
		LEFT JOIN biz_order h ON h.id = g.order_id
		<where>
			<if test="installBillId != null and installBillId != ''">
				AND a.id = #{installBillId}
			</if>
			<if test="workerName != null and workerName != ''">
				AND d.realName LIKE CONCAT('%','${workerName}','%' )
			</if>
		
			ORDER BY
				distance ASC
		</where>
	
	
	
	</select>
	
	<!-- 查询安装单的相关信息 -->
	<select id="findInstallBillDetails" parameterType="int" resultType="cn.damei.entity.modules.BizSupplierInstallBill">
	
		SELECT
			a.id AS "id",
			a.install_bill_code AS "installBillCode",
			a.order_install_plan_id AS "orderInstallPlanId",
			a.supplier_id AS "supplierId",
			a.supplier_confirm_into_date AS "supplierConfirmIntoDate",
			a.supplier_confirm_complete_date AS "supplierConfirmCompleteDate",
			a. STATUS AS "status",
			a.status_datetime AS "statusDatetime",
			b.id AS "installPlanId",
			b.install_item_name AS "installItemName",
			f.id AS "installConstructBillId",
			f.employee_group_id AS "employeeGroupId",
			c.community_name AS "communityName",
			c.build_number AS "buildNumber",
			c.build_unit AS "buildUnit",
			c.build_room AS "buildRoom",
			c.customer_name AS "customerName",
			c.customer_phone AS "customerPhone",
			c.item_manager_id AS "itemManagerId",
			e.realName AS "itemManagerName",
			e.phone AS "itemManagerPhone"
		FROM
			biz_supplier_install_bill a
		INNER JOIN biz_order_install_plan b ON a.order_install_plan_id = b.id
		LEFT JOIN biz_supplier_install_construct_bill f ON f.supplier_install_bill_id = a.id AND f.`status` != 90
		LEFT JOIN biz_order c ON b.order_id = c.id
		LEFT JOIN biz_employee e ON c.item_manager_id = e.id
		WHERE
			a.id = #{0}
	
	
	
	</select>
	
	<!-- 更新安装项   分派工人组 -->
	<update id="updateSupplier" parameterType="cn.damei.entity.modules.EnginInstallNew">
		
		UPDATE biz_order_install_plan SET 	
			status = #{installStatus},
			supplier_confirm_into_date = #{supplierConfirmIntoDate},
			supplier_confirm_complete_date = #{supplierConfirmCompleteDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
    
    </update>
	
	
	<!-- 根据工人组id查询工人组长信息 -->
	<select id="findWorkerMessage" parameterType="int" resultType="cn.damei.entity.modules.SupplierInstallWorker">
		SELECT
			c.id AS "employeegroupId",
			c.groupId AS "workerId",
			d.realName AS "workerName",
			d.phone AS "workerPhone"
		FROM
			biz_employeegroup c
		LEFT JOIN biz_employee d ON c.groupId = d.id
		WHERE c.id = #{0}
	
	
	</select>
	
	<!-- 查询工人组施工单信息 -->
	<select id="findEmployeeGroupMessage" parameterType="int" resultType="cn.damei.entity.modules.BizSupplierInstallConstructBill">
		SELECT
			a.id AS "id",
			a.construct_bill_code AS "constructBillCode",
			a.supplier_install_bill_id AS "supplierInstallBillId",
			a.employee_group_id AS "employeeGroupId",
			a. STATUS AS "status",
			a.status_datetime AS "statusDatetime",
			a.real_into_date AS "realIntoDate",
			a.real_complete_date AS "realCompleteDate",
			a.real_accept_date AS "realAcceptDate",
			IFNULL(DATE_FORMAT(a.real_into_date,'%Y-%m-%d %H:%i:%S'),"") AS "realIntoDateString",
			IFNULL(DATE_FORMAT(a.real_complete_date,'%Y-%m-%d %H:%i:%S'),"") AS "realCompleteDateString",
			IFNULL(DATE_FORMAT(a.real_accept_date,'%Y-%m-%d %H:%i:%S'),"") AS "realAcceptDateString",
			c.id AS "workerId",
			c.realName AS "workerName",
			c.phone AS "workerPhone"
		FROM
			biz_supplier_install_construct_bill a
		LEFT JOIN biz_employeegroup b ON a.employee_group_id = b.id
		LEFT JOIN biz_employee c ON b.groupId = c.id
		WHERE
			a.id = #{0}
	</select>
	
	
	
</mapper>