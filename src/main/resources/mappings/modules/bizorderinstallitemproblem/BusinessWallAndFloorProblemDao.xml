<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.BusinessWallAndFloorProblemDao">
    
	
	<select id="findList" resultType="cn.damei.entity.modules.BizOrderInstallItemProblemVo">
		
		SELECT
			a.id AS "problemId",
			a.create_date AS "createDate",
			a.delay_days AS "delayDays",
			a.is_delay AS "isDelay",
			a.problem_type_id AS "problemTypeId",
			h.type_name AS "problemTypeName",
			a.problem_describe AS "problemDescribe",
			a.`status` AS "status",
			j.label AS "statusName",
			c.create_date AS "materialCreateDate",
			b.store_id AS "storeId",
			e.`name` AS "storeName",
			b.project_mode AS "projectMode",
			f.label AS "projectModeName",
			b.engin_depart_id AS "engineDepartId",
			g.`name` AS "engineDepartName",
			b.community_name AS "communityName",
			b.build_number AS "buildNumber",
			b.build_unit AS "buildUnit",
			b.build_room AS "buildRoom",
			b.customer_name AS "customerName",
			b.customer_phone AS "customerPhone",
			d.realName AS "itemManager",
			d.phone AS "itemManagerPhone"
		FROM
			biz_business_problem a
		INNER JOIN biz_order b ON a.business_only_mark_int = b.id
		LEFT JOIN biz_business_problem_log c ON c.business_problem_id = a.id AND c.problem_solve_role = #{problemSolveRole} AND c.`status` = #{logStatus}
		LEFT JOIN biz_employee d ON d.id = b.item_manager_id
		LEFT JOIN sys_office e ON e.id = b.store_id AND e.del_flag = #{DEL_FLAG_NORMAL}
		LEFT JOIN sys_dict f ON f.`value` = b.project_mode AND f.type = 'project_mode' AND f.del_flag = #{DEL_FLAG_NORMAL}
		LEFT JOIN biz_engineering_department g ON g.id = b.engin_depart_id AND g.del_flag = #{DEL_FLAG_NORMAL}
		LEFT JOIN biz_business_problem_type h ON h.id = a.problem_type_id
		LEFT JOIN sys_dict j ON j.`value` = a.`status` AND j.type = 'wall_and_floor_problem_status' AND j.del_flag = #{DEL_FLAG_NORMAL}


		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="businessType != null and businessType != ''">
				AND  a.business_type = #{businessType}
			</if>
			<if test="storeId != null and storeId != ''">
				AND  b.store_id = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND  b.project_mode = #{projectMode}
			</if>
			<if test="engineDepartId != null and engineDepartId != ''">
				AND b.engin_depart_id =#{engineDepartId}
			</if>
			<if test="customerName != null and customerName != ''">
				AND b.customer_name LIKE concat('%',#{customerName},'%')
			</if>
			<if test="itemManager != null and itemManager != ''">
				AND d.realName LIKE concat('%',#{itemManager},'%')
			</if>
			<if test="problemTypeId != null and problemTypeId != ''">
				AND a.problem_type_id =#{problemTypeId}
			</if>
			<if test="beginCreateDate != null and beginCreateDate != ''">
				AND a.create_date &gt;= #{beginCreateDate} 
			</if>
			<if test="endCreateDate != null and endCreateDate != ''">
				AND a.create_date &lt;=  #{endCreateDate}
			</if>
			<if test="status != null and status != ''">
				AND a.status =#{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 墙地砖问题上报详情页 -->
	<select id="findDetails" parameterType="int" resultType="cn.damei.entity.modules.BizOrderInstallItemProblemVo">
		SELECT
			
			a.id AS "problemId",
			a.create_date AS "createDate",
			a.delay_days AS "delayDays",
			a.is_delay AS "isDelay",
			a.problem_type_id AS "problemTypeId",
			h.type_name AS "problemTypeName",
			a.problem_describe AS "problemDescribe",
			a.`status` AS "status",
			b.community_name AS "communityName",
			b.build_number AS "buildNumber",
			b.build_unit AS "buildUnit",
			b.build_room AS "buildRoom",
			b.customer_name AS "customerName",
			b.customer_phone AS "customerPhone",
			d.realName AS "itemManager",
			d.phone AS "itemManagerPhone",
			e.problem_solve_employee_id AS "problemApplyEmployeeId",
			c.problem_solve_employee_id AS "materialApplyEmployeeId",
			d2.realName AS "materialApplyEmployeeName",
			d2.phone AS "materialApplyEmployeePhone",
			d3.realName AS "problemApplyEmployeeName",
			d3.phone AS "problemApplyEmployeePhone",
			c.create_date AS "materialCreateDate",
			c.create_by AS "materialCreateBy",
			c.problem_solve_notes AS "materialNote"
		FROM
			biz_business_problem a
		INNER JOIN biz_order b ON a.business_only_mark_int = b.id
		LEFT JOIN biz_employee d ON d.id = b.item_manager_id
		LEFT JOIN biz_business_problem_type h ON h.id = a.problem_type_id
		LEFT JOIN biz_business_problem_log c ON c.business_problem_id = a.id AND c.problem_solve_role = 3 AND c.`status` = 50
		LEFT JOIN biz_business_problem_log e ON e.business_problem_id = a.id AND e.problem_solve_role = 1 AND e.`status` = 10
		LEFT JOIN biz_employee d2 ON d2.id = c.problem_solve_employee_id
		LEFT JOIN biz_employee d3 ON d3.id = e.problem_solve_employee_id
		WHERE
			a.id = #{0}
	
	
	</select>
	
	
	<!-- 更新问题上报状态 -->
	<update id="updateProblem">
		UPDATE biz_business_problem SET 	
			business_only_mark_int = #{businessOnlyMarkId},
			problem_type_id = #{problemTypeId},
			is_delay = #{isDelay},
			delay_days = #{delayDays},
			problem_describe = #{problemDescribe},
			status = #{status},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			business_type = #{businessType}
		WHERE id = #{id}
	
	
	</update>
		
</mapper>