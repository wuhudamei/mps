<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="cn.damei.dao.modules.BizOrderFinanceCollectionDao">

	<insert id="insert">
		INSERT INTO biz_order_finance_collection (
		id,
		order_id,
		collection_type,
		collection_amount,
		collection_datetime,
		remarks,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag,
		collection_status,
		collection_operator_employee_id,
		collection_remarks,
		collection_operate_datetime
		) VALUES (
		#{id},
		#{orderId},
		#{collectionType},
		#{collectionAmount},
		#{collectionDatetime},
		#{remarks},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{delFlag},
		#{collectionStatus},
		#{collectionOperatorEmployeeId},
		#{collectionRemarks},
		#{collectionOperatorDatetime}
		)
	</insert>

	<update id="update">
		update biz_order_finance_collection set
		collection_amount = #{collectionAmount},
		collection_datetime =
		#{collectionDatetime},
		update_by = #{updateBy},
		update_date =
		#{updateDate},
		collection_status = #{collectionStatus}
		where order_id =
		#{orderId} and collection_type = #{collectionType} and
		del_flag=0
	</update>

	<select id="checkIsExistByParam" parameterType="java.util.Map"
		resultType="int">
		SELECT
		count(*)
		FROM
		`biz_order_finance_collection` a
		WHERE
		a.order_id =
		#{orderId}
		and a.collection_type = #{collectionType}
		<if test="collectionStatus != null">
			AND a.collection_status in
			<foreach collection="collectionStatus" item="item" open="("
				separator="," close=")" index="index">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="findList"
		resultType="cn.damei.entity.modules.BizOrderFinanceCollection">
		SELECT
		b.store_id AS "storeId",
		b.project_mode AS "projectMode",
		en.`name` AS "departmentName",
		b.order_number AS "orderNum",
		a.collection_operate_datetime AS "collectionOperatorDatetime",
		b.customer_name AS "customerName",
		b.customer_phone AS "customerPhone",
		b.community_name AS "communityName",
		b.build_room AS "buildRoom",
		b.build_number AS "buildNumber",
		b.build_unit AS "buildUnit",
		b.sign_contract_date AS "signContractDate",
		a.collection_type AS
		"collectionType",
		a.collection_status AS "collectionStatus"
		FROM
		biz_order_finance_collection a
		LEFT JOIN biz_order b on a.order_id =
		b.id
		LEFT JOIN biz_engineering_department en on en.id =
		b.engin_depart_id
		<where>
			<if test="storeId != null and storeId != ''">
				AND b.store_id = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND b.project_mode = #{projectMode}
			</if>
			<if test="enginDepartIds != null and enginDepartIds.size>0">
				AND b.engin_depart_id in
				<foreach item="item" index="index" collection="enginDepartIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="collectionStatusList != null and collectionStatusList.size>0">
				AND a.collection_status in
				<foreach item="item" index="index" collection="collectionStatusList"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="orderNum != null and orderNum != ''">
				AND b.order_number = #{orderNum}
			</if>
			<if test="customerName != null and customerName != ''">
				AND b.customer_name LIKE
				<if test="dbName == 'oracle'">'%'||#{customerName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customerName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customerName},'%')</if>
			</if>
			<if test="collectionType != null and collectionType != ''">
			   AND a.collection_type = #{collectionType}
			</if>
			<if test="beginCheckDate != null and beginCheckDate != '' and endCheckDate != null and endCheckDate != ''">
			   AND a.collection_operate_datetime BETWEEN #{beginCheckDate} AND #{endCheckDate}
			</if>
		</where>
	</select>
	
	<select id="findListPrePmSettleFinList" resultType="cn.damei.entity.modules.BizOrderFinanceCollection">
	    SELECT
		b.store_id AS "storeId",
		b.project_mode AS "projectMode",
		en.`name` AS "departmentName",
		b.order_number AS "orderNum",
		a.create_date AS "collectionOperatorDatetime",
		b.customer_name AS "customerName",
		b.customer_phone AS "customerPhone",
		b.community_name AS "communityName",
		b.build_room AS "buildRoom",
		b.build_number AS "buildNumber",
		b.build_unit AS "buildUnit",
		b.sign_contract_date AS "signContractDate",
		a.receive_money_type AS "collectionType",
		a.receive_money_amount AS "collectionAmount",
		a.collection_status AS "collectionStatus",
		a.receive_money_datetime AS "collectionDatetime"
		FROM
		biz_pre_pm_settle_finance_receive_moeny a
		LEFT JOIN biz_order b on a.order_id =
		b.id
		LEFT JOIN biz_engineering_department en on en.id =
		b.engin_depart_id
		<where>
		     a.del_flag = 0
			<if test="storeId != null and storeId != ''">
				AND b.store_id = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND b.project_mode = #{projectMode}
			</if>
			<if test="enginDepartIds != null and enginDepartIds.size>0">
				AND b.engin_depart_id in
				<foreach item="item" index="index" collection="enginDepartIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="collectionStatusList != null and collectionStatusList.size>0">
				AND a.collection_status in
				<foreach item="item" index="index" collection="collectionStatusList"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="orderNum != null and orderNum != ''">
				AND b.order_number = #{orderNum}
			</if>
			<if test="customerName != null and customerName != ''">
				AND b.customer_name LIKE
				<if test="dbName == 'oracle'">'%'||#{customerName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customerName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customerName},'%')</if>
			</if>
			<if test="collectionType != null and collectionType != ''">
			   AND a.receive_money_type = #{collectionType}
			</if>
			<if test="beginCheckDate != null and beginCheckDate != '' and endCheckDate != null and endCheckDate != ''">
			   AND a.receive_money_datetime BETWEEN #{beginCheckDate} AND #{endCheckDate}
			</if>
			<if test="sysBeginCheckDate != null and sysBeginCheckDate != '' and sysEndCheckDate != null and sysEndCheckDate != ''">
			   AND a.create_date BETWEEN #{sysBeginCheckDate} AND #{sysEndCheckDate}
			</if>
		</where>
	</select>
</mapper>