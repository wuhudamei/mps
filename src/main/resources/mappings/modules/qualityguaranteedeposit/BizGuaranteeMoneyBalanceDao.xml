<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="cn.damei.dao.modules.BizGuaranteeMoneyBalanceDao">
	<sql id="bizGuaranteeMoneyBalanceColumns">
		a.id as "id",
		a.employee_id as "employeeId",
		a.guarantee_money_balance as "guaranteeMoneyBalance",
		a.guarantee_money_amount_paid_settle as
		"guaranteeMoneyAmountPaidSettle",
		a.guarantee_money_amount_paid_offline as
		"guaranteMoneyAmountPaidOffline",
		a.guarantee_money_amount_paid_used as
		"guaranteeMoneyAmountPaidUsed",
		a.remarks AS "remarks",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="bizGuaranteeMoneyBalanceJoins">
	</sql>

	<select id="get"
		resultType="cn.damei.entity.modules.BizGuaranteeMoneyBalance">
		SELECT
		DISTINCT(a.id) AS "id",
		a.employee_id AS "employeeId",
		a.guarantee_money_balance AS "guaranteeMoneyBalance",
		a.guarantee_money_amount_paid_settle AS
		"guaranteeMoneyAmountPaidSettle",
		a.guarantee_money_amount_paid_offline AS
		"guaranteMoneyAmountPaidOffline",
		a.guarantee_money_amount_paid_used AS
		"guaranteeMoneyAmountPaidUsed",
		a.remarks AS "remarks",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		c.realName AS "empName",
		c.phone AS "empPhone",
		c.star as "star",
		c.workType as "workType"
		FROM biz_guarantee_money_balance a
		LEFT JOIN
		biz_employee c on c.id=a.employee_id
		WHERE a.id =#{id}
	</select>

	<select id="findGuaranteeMoneyBalanceByEmployeeId"
		resultType="cn.damei.entity.modules.BizGuaranteeMoneyBalance">
		SELECT
		DISTINCT(a.id) AS "id",
		a.employee_id AS "employeeId",
		a.guarantee_money_balance AS "guaranteeMoneyBalance",
		a.guarantee_money_amount_paid_settle AS
		"guaranteeMoneyAmountPaidSettle",
		a.guarantee_money_amount_paid_offline AS
		"guaranteMoneyAmountPaidOffline",
		a.guarantee_money_amount_paid_used AS
		"guaranteeMoneyAmountPaidUsed",
		a.remarks AS "remarks",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		c.realName AS "empName",
		c.phone AS "empPhone",
		c.star as "star",
		c.workType as "workType"
		FROM biz_guarantee_money_balance a
		LEFT JOIN
		biz_employee c on c.id=a.employee_id
		WHERE
		(a.del_flag = '0' or
		a.del_flag is null)
		and a.employee_id=#{employeeId}
	</select>

	<select id="findManagerGuaranteeMoneyBalanceByParam"
		resultType="cn.damei.entity.modules.BizGuaranteeMoneyBalance">
		SELECT
		a.id AS "id",
		a.employee_id AS "employeeId",
		a.guarantee_money_balance AS "guaranteeMoneyBalance",
		a.guarantee_money_amount_paid_settle AS
		"guaranteeMoneyAmountPaidSettle",
		a.guarantee_money_amount_paid_offline AS
		"guaranteMoneyAmountPaidOffline",
		a.guarantee_money_amount_paid_used AS
		"guaranteeMoneyAmountPaidUsed",
		a.remarks AS "remarks",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		c.storeId as "storeId",
		c.project_mode as "projectMode",
		b.engin_depart_id as "engineDepartId",
		c.realName AS "empName",
		c.phone
		AS "empPhone",
		c.star as "star",
		c.workType as "workType"
		FROM
		biz_guarantee_money_balance a
		LEFT JOIN biz_employee c on
		c.id=a.employee_id
		LEFT JOIN biz_engin_depart_employee_position b on
		b.employee_id = a.employee_id
		<where>
			(a.del_flag = #{DEL_FLAG_NORMAL} or a.del_flag is null)
			AND c.del_flag = 0
			AND b.del_flag =0
			AND c.empType=3
			<if test="storeId != null and storeId !=''">
				AND c.storeId = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND c.project_mode=#{projectMode}
			</if>
			<if test="engineDepartId != null and engineDepartId != ''">
				AND b.engin_depart_id = #{engineDepartId}
			</if>

			<if test="empName != null and empName != ''">
				AND c.realName LIKE
				<if test="dbName == 'oracle'">'%'||#{empName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{empName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{empName},'%')</if>
			</if>
			<if test="empPhone != null and empPhone != ''">
				AND c.phone LIKE
				<if test="dbName == 'oracle'">'%'||#{empPhone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{empPhone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{empPhone},'%')</if>
			</if>
		</where>
		group by a.id
		ORDER BY
		c.storeId,c.project_mode,b.engin_depart_id,a.employee_id
	</select>

	<select id="findWorkerGuaranteeMoneyBalanceByParam"
		resultType="cn.damei.entity.modules.BizGuaranteeMoneyBalance">
		SELECT
		a.id AS "id",
		a.employee_id AS "employeeId",
		a.guarantee_money_balance AS "guaranteeMoneyBalance",
		a.guarantee_money_amount_paid_settle AS
		"guaranteeMoneyAmountPaidSettle",
		a.guarantee_money_amount_paid_offline AS
		"guaranteMoneyAmountPaidOffline",
		a.guarantee_money_amount_paid_used AS
		"guaranteeMoneyAmountPaidUsed",
		a.remarks AS "remarks",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		c.storeId as "storeId",
		c.project_mode as "projectMode",
		b.elactricationId as "engineDepartId",
		c.realName AS "empName",
		c.phone
		AS "empPhone",
		c.star as "star",
		c.workType as "workType"
		FROM
		biz_guarantee_money_balance a
		LEFT JOIN biz_employee c on
		c.id=a.employee_id
		LEFT JOIN biz_employeegroup b on
		b.groupId = a.employee_id
		<where>
			(a.del_flag = #{DEL_FLAG_NORMAL} or a.del_flag is null)
			AND c.del_flag = 0
			AND c.empType=2
			<if test="storeId != null and storeId !=''">
				AND c.storeId = #{storeId}
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND c.project_mode=#{projectMode}
			</if>
			<if test="engineDepartId != null and engineDepartId != ''">
				AND b.elactricationId = #{engineDepartId}
			</if>

			<if test="empName != null and empName != ''">
				AND c.realName LIKE
				<if test="dbName == 'oracle'">'%'||#{empName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{empName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{empName},'%')</if>
			</if>
			<if test="empPhone != null and empPhone != ''">
				AND c.phone LIKE
				<if test="dbName == 'oracle'">'%'||#{empPhone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{empPhone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{empPhone},'%')</if>
			</if>
		</where>
		group by a.id
		ORDER BY
		c.storeId,c.project_mode,b.elactricationId,a.employee_id
	</select>

	<select id="findList"
		resultType="cn.damei.entity.modules.BizGuaranteeMoneyBalance">
		SELECT
		<include refid="bizGuaranteeMoneyBalanceColumns" />
		FROM biz_guarantee_money_balance a
		<include refid="bizGuaranteeMoneyBalanceJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id =#{id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		keyColumn="id">
		INSERT INTO biz_guarantee_money_balance(
		id,
		employee_id,
		guarantee_money_balance,
		guarantee_money_amount_paid_settle,
		guarantee_money_amount_paid_offline,
		guarantee_money_amount_paid_used,
		remarks,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag
		) VALUES (
		#{id},
		#{employeeId},
		#{guaranteeMoneyBalance},
		#{guaranteeMoneyAmountPaidSettle},
		#{guaranteMoneyAmountPaidOffline},
		#{guaranteeMoneyAmountPaidUsed},
		#{remarks},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE biz_guarantee_money_balance SET
		employee_id=#{employeeId},
		guarantee_money_balance=#{guaranteeMoneyBalance},
		guarantee_money_amount_paid_settle=#{guaranteeMoneyAmountPaidSettle},
		guarantee_money_amount_paid_offline=#{guaranteMoneyAmountPaidOffline},
		guarantee_money_amount_paid_used=#{guaranteeMoneyAmountPaidUsed},
		remarks = #{remarks},
		update_by = #{updateBy.id},
		update_date =
		#{updateDate}
		WHERE id=#{id}
	</update>

	<update id="delete">
		UPDATE biz_guarantee_money_balance SET
		del_flag =
		#{DEL_FLAG_DELETE}
		WHERE id =#{id}
	</update>
</mapper>