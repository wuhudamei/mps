<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.dao.modules.OrderDao">

	<sql id="orderColumns">
		a.id AS "orderId",
		a.order_number AS "orderNumber",
		a.contract_number AS "contractNumber",
		a.customer_type AS "customerType",
		a.customer_description AS "customerDescription",
		a.customer_name AS "customerName",
		a.customer_phone AS "customerPhone",
		a.community_name AS "communityName",
		a.build_number AS "buildNumber",
		a.build_unit AS "buildUnit",
		a.build_room AS "buildRoom",
		a.map_coordinate AS "mapCoordinate",
		substring_index(a.map_coordinate, ',', 1) AS "lng",
		substring_index(a.map_coordinate, ',', - 1) AS "lat",
		a.sale_type AS "saleType",
		a.area AS "area",
		a.build_type AS "buildType",
		a.house_type AS "houseType",
		a.house_is_new AS "houseIsNew",
		a.is_elevator AS "isElevator",
		a.designer_name AS "designerName",
		a.designer_phone AS "designerPhone",
		a.order_reporter_name AS "orderReporterName",
		a.order_reporter_phone AS "orderReporterPhone",
		a.service_name AS "serviceName",
		a.service_phone AS "servicePhone",
		a.contract_start_date AS "contractStartDate",
		a.contract_end_date AS "contractEndDate",
		a.covered_area AS "coveredArea",
		a.contract_area AS "contractArea",
		a.contract_time AS "contractTime",
		a.customer_address as "customerAddress",
		a.sign_contract_date AS "signContractDate",
		a.order_status_number AS "orderStatusNumber",
		a.order_status_description AS "orderStatusDescription",
		a.order_inspector AS "orderInspector",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.item_manager AS "itemManager",
		a.item_manager_id AS "itemManagerId",
		a.store_id AS "storeId",
		a.cus_manager AS "cusManager",
		a.orderTaskPack_status AS "orderTaskPackStatus",
		a.province AS "province",
		a.city AS "city",
		a.county AS "county",
		a.detail_address AS "detailAddress",
		a.biz_order_accept_area AS "acceptAreaId",
		a.project_mode as "projectMode" ,
		a.longway_amount as "distanceFee",
		a.engin_depart_id as "engineDepartId",
		a.get_order_datetime as "acceptOrderDate",
		a.floor as  "floor",
		a.contract_amount AS "contractAmount",
		a.designer_employee_id AS "designerEmployeeId",
		a.is_scrap AS "isScrap",
		a.auditor_employee_id AS "auditorEmployeeId",
		a.auditor_name AS "auditorName",
		a.auditor_phone AS "auditorPhone",
		a.prepare_order_id AS "prepareOrderId"
		
	</sql>

	<sql id="orderJoins">
	</sql>
	
	<select id="getOrderByNuAndStoreId" resultType="Order">
		SELECT <include refid="orderColumns"/>
		FROM biz_order a 
		<where>
				a.store_id = #{storeId}
				AND a.order_number = #{orderNumber}
		</where>
	</select>
	
	<select id="getProjectbyId" parameterType="String" resultType="cn.damei.entity.modules.Order">
SELECT
	a.id AS "orderId",
	a.order_number AS "orderNumber",
	a.contract_number AS "contractNumber",
	a.customer_type AS "customerType",
	a.customer_description AS "customerDescription",
	a.customer_name AS "customerName",
	a.customer_phone AS "customerPhone",
	a.community_name AS "communityName",
	a.build_number AS "buildNumber",
	a.build_unit AS "buildUnit",
	a.build_room AS "buildRoom",
	a.map_coordinate AS "mapCoordinate",
	substring_index(a.map_coordinate, ',', 1) AS "lng",
	substring_index(a.map_coordinate, ',', - 1) AS "lat",
	a.sale_type AS "saleType",
	a.area AS "area",
	a.build_type AS "buildType",
	a.house_type AS "houseType",
	a.house_is_new AS "houseIsNew",
	a.is_elevator AS "isElevator",
	a.designer_name AS "designerName",
	a.designer_phone AS "designerPhone",
	a.order_reporter_name AS "orderReporterName",
	a.order_reporter_phone AS "orderReporterPhone",
	a.service_name AS "serviceName",
	a.service_phone AS "servicePhone",
	a.contract_start_date AS "contractStartDate",
	a.contract_end_date AS "contractEndDate",
	a.covered_area AS "coveredArea",
	a.contract_area AS "contractArea",
	a.contract_time AS "contractTime",
	a.customer_address AS "customerAddress",
	a.sign_contract_date AS "signContractDate",
	a.order_status_number AS "orderStatusNumber",
	a.order_status_description AS "orderStatusDescription",
	a.order_inspector AS "orderInspector",
	a.create_by AS "createBy.id",
	a.create_date AS "createDate",
	a.update_by AS "updateBy.id",
	a.update_date AS "updateDate",
	a.remarks AS "remarks",
	CONCAT(
		a.customer_address,
		'-',
		a.community_name,
		'-',
		a.build_number,
		'-',
		a.build_unit,
		'-',
		a.build_room
	) AS "projectName",
	a.del_flag AS "delFlag",
	a.item_manager AS "itemManager",
	a.item_manager_id AS "itemManagerId",
	a.store_id AS "storeId",
	a.cus_manager AS "cusManager",
	a.orderTaskPack_status AS "orderTaskPackStatus",
	a.province AS "province",
	a.city AS "city",
	a.county AS "county",
	a.detail_address AS "detailAddress",
	a.biz_order_accept_area AS "acceptAreaId",
b.label AS "projectMode",
	a.longway_amount AS "distanceFee",
	c.`name` AS "engineDepartName",
	a.get_order_datetime AS "acceptOrderDate",
	a.floor AS "floor",
	a.contract_amount AS "contractAmount"
FROM
	biz_order a
LEFT JOIN sys_dict b on a.project_mode = b.`value` and b.type='project_mode'
LEFT JOIN biz_engineering_department c on a.engin_depart_id = c.id
WHERE
	a.id = #{id}
	AND a.order_status_number != '300'
	</select>

	<select id="getProjectName" parameterType="String" resultType="cn.damei.entity.modules.Order">
SELECT
	a.id AS "orderId",
	a.order_number AS "orderNumber",
	a.contract_number AS "contractNumber",
	a.customer_type AS "customerType",
	a.customer_description AS "customerDescription",
	a.customer_name AS "customerName",
	a.customer_phone AS "customerPhone",
	a.community_name AS "communityName",
	a.build_number AS "buildNumber",
	a.build_unit AS "buildUnit",
	a.build_room AS "buildRoom",
	a.map_coordinate AS "mapCoordinate",
	substring_index(a.map_coordinate, ',', 1) AS "lng",
	substring_index(a.map_coordinate, ',', - 1) AS "lat",
	a.sale_type AS "saleType",
	a.area AS "area",
	a.build_type AS "buildType",
	a.house_type AS "houseType",
	a.house_is_new AS "houseIsNew",
	a.is_elevator AS "isElevator",
	a.designer_name AS "designerName",
	a.designer_phone AS "designerPhone",
	a.order_reporter_name AS "orderReporterName",
	a.order_reporter_phone AS "orderReporterPhone",
	a.service_name AS "serviceName",
	a.service_phone AS "servicePhone",
	a.contract_start_date AS "contractStartDate",
	a.contract_end_date AS "contractEndDate",
	a.covered_area AS "coveredArea",
	a.contract_area AS "contractArea",
	a.contract_time AS "contractTime",
	a.customer_address AS "customerAddress",
	a.sign_contract_date AS "signContractDate",
	a.order_status_number AS "orderStatusNumber",
	a.order_status_description AS "orderStatusDescription",
	a.order_inspector AS "orderInspector",
	a.create_by AS "createBy.id",
	a.create_date AS "createDate",
	a.update_by AS "updateBy.id",
	a.update_date AS "updateDate",
	a.remarks AS "remarks",
	CONCAT(
		a.customer_address,
		'-',
		a.community_name,
		'-',
		a.build_number,
		'-',
		a.build_unit,
		'-',
		a.build_room
	) AS "projectName",
	a.del_flag AS "delFlag",
	a.item_manager AS "itemManager",
	a.item_manager_id AS "itemManagerId",
	a.store_id AS "storeId",
	a.cus_manager AS "cusManager",
	a.orderTaskPack_status AS "orderTaskPackStatus",
	a.province AS "province",
	a.city AS "city",
	a.county AS "county",
	a.detail_address AS "detailAddress",
	a.biz_order_accept_area AS "acceptAreaId",
b.label AS "projectMode",
	a.longway_amount AS "distanceFee",
	c.`name` AS "engineDepartName",
	a.get_order_datetime AS "acceptOrderDate",
	a.floor AS "floor",
	a.contract_amount AS "contractAmount"
FROM
	biz_order a
LEFT JOIN sys_dict b on a.project_mode = b.`value` and b.type='project_mode'
LEFT JOIN biz_engineering_department c on a.engin_depart_id = c.id
WHERE
	a.customer_name = #{customerNameNot}
	AND a.order_status_number != '300'
	</select>
	<!-- 根据订单ID查询订单信息 -->
	<select id="get" resultType="Order">
		SELECT
		<include refid="orderColumns" />
		FROM biz_order a
		<include refid="orderJoins" />
		WHERE a.id =#{orderId}
		<!-- AND a.order_status_number !='300' -->
	</select>

	<select id="getByIdAndStoreId" resultType="Order">
		SELECT
		<include refid="orderColumns" />
		FROM BIZ_ORDER a
		WHERE a.ID = #{0}
		and a.STORE_ID = #{1}
	</select>

    <select id="findOrderByParam" resultType="Order">
       SELECT
		<include refid="orderColumns" />,
		actual_end_date AS "actualEndDate"
		FROM biz_order a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.order_status_number &lt; 340
			<if test="storeId != null and storeId != ''">
				AND a.store_id = #{storeId}
			</if>
			
			<if test="projectMode != null and projectMode != ''">
				AND a.project_mode = #{projectMode}
			</if>
			
			<if test="engineDepartId != null and engineDepartId != ''">
				 and  	a.engin_depart_id = #{engineDepartId}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND a.order_number LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNumber}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNumber}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNumber},'%')</if>
			</if>
		</where>
    </select>

	<select id="findList" resultType="Order">
		SELECT
		<include refid="orderColumns" />,
		boe.is_enabled AS enabled,
		actual_end_date AS "actualEndDate"
		FROM biz_order a
		left join (select order_id,is_enabled from biz_customer_return_visit_order_enable group by order_id) boe on a.id = boe.order_id
		<include refid="orderJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id =#{orderId}
			</if>
			<if test="orderSource != null and orderSource != '' and orderSource == 1">
				AND a.prepare_order_id IS NULL
			</if>
			<if test="orderSource != null and orderSource != '' and orderSource == 2">
				AND a.prepare_order_id IS NOT NULL
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND a.order_number LIKE CONCAT('%','${orderNumber}','%' )
			</if>
			<if test="acceptOrderDate != null and acceptOrderDate != ''">
				AND a.get_order_datetime like concat('%',#{acceptOrderDate},'%')
			</if>
			<if test="engineDepartId != null and engineDepartId != ''">
				AND a.engin_depart_id = #{engineDepartId}
			</if>
			<if test="engineDepartId == null and empEngineDepartIds !=null">
				AND a.engin_depart_id  in
        <foreach collection="empEngineDepartIds" item="empEngineDepartIds" index="index"
            open="(" close=")" separator=",">
            #{empEngineDepartIds}
        </foreach>
			</if>
			<if test="projectMode != null and projectMode != ''">
				AND a.project_mode = #{projectMode}
			</if>
			<if test="isScrap != null and isScrap != ''">
				AND a.is_scrap = #{isScrap}
			</if>
			<if test="customerType != null and customerType != ''">
				AND a.customer_type = #{customerType}
			</if>
			<if test="customerName != null and customerName != ''">
				AND a.customer_name LIKE
				<if test="dbName == 'oracle'">'%'||#{customerName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customerName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customerName},'%')</if>
			</if>
			<if test="customerPhone != null and customerPhone != ''">
				AND a.customer_phone LIKE
				CONCAT('%','${customerPhone}','%' )
			</if>
			<if test="engineDepartId != null and engineDepartId != ''">
				 and  	a.engin_depart_id = #{engineDepartId}
			</if>
			<if test="designerName != null and designerName != ''">
				AND a.designer_name LIKE
				<if test="dbName == 'oracle'">'%'||#{designerName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{designerName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{designerName},'%')</if>
			</if>
			<if
				test="beginContractStartDate != null and endContractStartDate != null and beginContractStartDate != '' and endContractStartDate != ''">
				AND a.contract_start_date BETWEEN #{beginContractStartDate} AND
				#{endContractStartDate}
			</if>
			<if
				test="beginSignContractDate != null and endSignContractDate != null and beginSignContractDate != '' and endSignContractDate != ''">
				AND a.sign_contract_date BETWEEN #{beginSignContractDate} AND
				#{endSignContractDate}
			</if>
			<if test="orderStatusDescription != null and orderStatusDescription != ''">
				AND a.order_status_number = #{orderStatusDescription}
			</if>
			<if
				test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND
				#{endCreateDate}
			</if>
			<if test="itemManager != null and itemManager != ''">
				AND a.item_manager = #{itemManager}
			</if>
			<if test="storeId != null and storeId != ''">
				AND a.store_id = #{storeId}
			</if>
			<if test="enabled != null">
				<if test="enabled==1">
				AND (boe.is_enabled = 1 or boe.is_enabled is null)
				</if>
				<if test="enabled!=1">
				AND (boe.is_enabled = 0 and  boe.is_enabled is not null)
				</if>
			</if>
			<if test="cusManager != null and cusManager != ''">
				AND a.cus_manager LIKE
				<if test="dbName == 'oracle'">'%'||#{cusManager}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{cusManager}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{cusManager},'%')</if>
			</if>
			ORDER BY a.create_date DESC
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				,${page.orderBy}
			</when>
			<otherwise>
				,a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="Order">
		SELECT
		<include refid="orderColumns" />
		FROM biz_order a
		<include refid="orderJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		<selectKey keyProperty="orderId" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>

		INSERT INTO biz_order(
		id,
		order_number,
		contract_number,
		customer_type,
		customer_description,
		customer_name,
		customer_phone,
		community_name,
		build_number,
		build_unit,
		build_room,
		map_coordinate,
		sale_type,
		area,
		build_type,
		house_type,
		house_is_new,
		is_elevator,
		designer_name,
		designer_phone,
		order_reporter_name,
		order_reporter_phone,
		service_name,
		service_phone,
		contract_start_date,
		contract_end_date,
		covered_area,
		contract_area,
		contract_time,
		customer_address,
		sign_contract_date,
		order_status_number,
		order_status_description,
		order_inspector,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag,
		item_manager,
		item_manager_id,
		store_id,
		cus_manager,
		orderTaskPack_status,
		province,
		city,
		county,
		detail_address,
		biz_order_accept_area,
		project_mode,
		longway_amount,
		engin_depart_id,
		get_order_datetime,
		prepare_order_id,
		floor,
		contract_amount,
		is_scrap,
		designer_employee_id,
		auditor_employee_id,
		auditor_name,
		auditor_phone
		
		) VALUES (
		#{orderId},
		#{orderNumber},
		#{contractNumber},
		#{customerType},
		#{customerDescription},
		#{customerName},
		#{customerPhone},
		#{communityName},
		#{buildNumber},
		#{buildUnit},
		#{buildRoom},
		#{mapCoordinate},
		#{saleType},
		#{area},
		#{buildType},
		#{houseType},
		#{houseIsNew},
		#{isElevator},
		#{designerName},
		#{designerPhone},
		#{orderReporterName},
		#{orderReporterPhone},
		#{serviceName},
		#{servicePhone},
		#{contractStartDate},
		#{contractEndDate},
		#{coveredArea},
		#{contractArea},
		#{contractTime},
		#{customerAddress},
		#{signContractDate},
		#{orderStatusNumber},
		#{orderStatusDescription},
		#{orderInspector},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag},
		#{itemManager},
		#{itemManagerId},
		#{storeId},
		#{cusManager},
		#{orderTaskPackStatus},
		#{province},
		#{city},
		#{county},
		#{detailAddress},
		#{acceptAreaId},
		#{projectMode},
		#{distanceFee},
		#{engineDepartId},
		#{acceptOrderDate},
		#{prepareOrderId},
		#{floor},
		#{contractAmount},
		#{isScrap},
		#{designerEmployeeId},
		#{auditorEmployeeId},
		#{auditorName},
		#{auditorPhone}
		
		)
	</insert>

	<update id="update">
		UPDATE biz_order SET
		order_number = #{orderNumber},
		contract_number =
		#{contractNumber},
		customer_type = #{customerType},
		customer_description = #{customerDescription},
		customer_name =
		#{customerName},
		customer_phone = #{customerPhone},
		customer_address =
		#{customerAddress},
		community_name = #{communityName},
		build_number =
		#{buildNumber},
		build_unit = #{buildUnit},
		build_room = #{buildRoom},
		map_coordinate = #{mapCoordinate},
		sale_type = #{saleType},
		area =
		#{area},
		build_type = #{buildType},
		house_type = #{houseType},
		house_is_new = #{houseIsNew},
		is_elevator = #{isElevator},
		designer_name = #{designerName},
		designer_phone = #{designerPhone},
		order_reporter_name = #{orderReporterName},
		order_reporter_phone =
		#{orderReporterPhone},
		service_name = #{serviceName},
		service_phone =
		#{servicePhone},
		contract_start_date = #{contractStartDate},
		contract_end_date = #{contractEndDate},
		covered_area = #{coveredArea},
		contract_area = #{contractArea},
		contract_time = #{contractTime},
		sign_contract_date = #{signContractDate},
		<!-- order_status_number = #{orderStatusNumber}, order_status_description 
			= #{orderStatusDescription}, -->
		order_inspector = #{orderInspector},
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		item_manager =
		#{itemManager},
		item_manager_id = #{itemManagerId},
		store_id =
		#{storeId},
		cus_manager = #{cusManager},
		province=#{province},
		city=#{city},
		county=#{county},
		biz_order_accept_area=#{acceptAreaId},
		detail_address=#{detailAddress},
		project_mode = #{projectMode},
		longway_amount = #{distanceFee} ,
		engin_depart_id =#{engineDepartId},
		get_order_datetime = #{acceptOrderDate},
		floor=#{floor},
		contract_amount=#{contractAmount},
		designer_employee_id=#{designerEmployeeId},
		is_scrap=#{isScrap},
		auditor_employee_id=#{auditorEmployeeId},
		auditor_name=#{auditorName},
		auditor_phone=#{auditorPhone}

		WHERE id
		=#{orderId}
	</update>

	<update id="delete">
		UPDATE biz_order SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id =#{orderId}
	</update>

	<update id="updateInstallItem"  parameterType="cn.damei.entity.modules.OrderInstallItemVo" >
	UPDATE biz_order_install_item SET
		`status`=#{installstatus},
	status_datetime=#{statusDate}
		WHERE id=#{id} 
	</update>
	<!--更新订单安装项安装模式  -->
	<update id="updateInstallMode">
			 update biz_order_install_item  
			 set install_mode=#{installMode}
			 where id = #{id}
		
	</update>
	<!-- 更新订单安装计划表 安装模式 -->
	<update id="updateInstallplanMode">
	 	update biz_order_install_plan  
		set install_mode=#{installMode}
		where order_install_item_id = #{id}
	</update>


	<!-- 得到所有订单编号 比重 -->

	<select id="getOrderNumberById" resultType="int"
		parameterType="java.lang.String">
		SELECT count(1) from biz_order where
		order_number=#{orderNumber}
	</select>
	
	<select id="getIdByOrderNumber" resultType="java.lang.Integer" parameterType="java.lang.String">
	    SELECT id from biz_order where
		order_number=#{orderNumber}
	</select>




	<select id="getAcceptAreaForOrder" parameterType="cn.damei.entity.modules.Order"
		resultType="cn.damei.entity.modules.Order">

		SELECT
		a.ID AS "acceptAreaId",
		a.NAME AS "acceptArea"
		FROM
		biz_area a
		WHERE
		a.del_flag = '0'
		
		<if test="storeId != null and storeId !=''">
		 and a.store_id = #{storeId}
		</if>
		<if test="projectMode != null and projectMode !=''">
			and a.project_mode = #{projectMode}
		</if>
	
	
		
	</select>



	<!-- ==============================安装项================================================================ -->
	<!-- ==============================安装项================================================================ -->
	<!-- ==============================安装项================================================================ -->

	<!-- 根据门店id动态加载安装项 -->
	<select id="findInstallItemByStoreId" parameterType="cn.damei.entity.modules.Order"
		resultType="cn.damei.entity.modules.OrderInstallItemVo">

		SELECT
		id as "projectInstallItemId",
		store_id as "storeId",
		install_item_name as "projectInstallItemName",
		install_item_sequence as
		"installItemSequence",
		work_apply_day as "daysToApplyInto",
		work_enter_day as "daysPlanInto",
		work_complete_day as
		"daysPalnComplete",
		is_on as "isOn",
		project_mode as "projectMode"
		FROM
		`biz_project_install_item` where is_on = '1' and
		store_id = #{storeId}
		and project_mode = #{projectMode}
	</select>
	<!-- 根据订单查询订单下的安装项 -->
	<select id="findInstallItemByOrderId" parameterType="int"
		resultType="cn.damei.entity.modules.OrderInstallItemVo">


		SELECT
		id as "id",
		project_install_item_id as
		"projectInstallItemId",
		order_id as "orderId",
		install_item_name as
		"projectInstallItemName",
		install_item_sequence as
		"installItemSequence",
		days_to_apply_into as
		"daysToApplyInto",
		days_plan_into as "daysPlanInto",
		days_plan_complete
		as
		"daysPalnComplete",
		install_mode as 'installMode'
		FROM
		`biz_order_install_item` where
		order_id=#{orderId}



	</select>
	<!-- 根据安装项id查询安装项 -->
	<select id="findInstallItemByInstallItemId" parameterType="int"
		resultType="cn.damei.entity.modules.OrderInstallItemVo">
		SELECT
			id as "projectInstallItemId",
			store_id as "storeId",
			install_item_name as "projectInstallItemName",
			install_item_sequence as "installItemSequence",
			work_apply_day as "daysToApplyInto",
			work_enter_day as "daysPlanInto",
			work_complete_day as "daysPalnComplete",
			is_on as "isOn",
			days_plan_checksize as "daysPlanChecksize",
			is_to_checksize AS "isToChecksize",
			install_mode  as installMode,
			is_show_install_description AS "isShowInstallDescription",
			install_description AS "installDescription"
		FROM
		`biz_project_install_item` where
		id=#{installItemId}
	</select>
	
	
	<!-- 根据提交的工程安装项id和订单已存在的工程安装项id，查询待添加的订单安装项 -->
	<select id="selectOrderProjectInstallItemToAdd" parameterType="map"
		resultType="cn.damei.entity.modules.OrderInstallItemVo">
		SELECT
			#{orderId}  as orderId,
			b.id as "projectInstallItemId",
			b.store_id as "storeId",
			b.install_item_name as "projectInstallItemName",
			b.install_item_sequence as "installItemSequence",
			b.work_apply_day as "daysToApplyInto",
			b.work_enter_day as "daysPlanInto",
			b.work_complete_day as "daysPalnComplete",
			b.is_on as "isOn",
			b.days_plan_checksize as "daysPlanChecksize",
			b.is_to_checksize AS "isToChecksize",
			b.is_show_install_description AS "isShowInstallDescription",
			b.install_description AS "installDescription"
		FROM biz_project_install_item b
		where b.id in ( ${projectInstallItemIds} )
		and b.id not in 
			(
				select c.project_install_item_id
				from biz_order_install_item c 
				where c.order_id=#{orderId}
			)
	</select>


	
	<!-- 根据订单id和安装项id，批量查询订单安装项id -->
	<select id="selectOrderInstallItemIds" parameterType="map" resultType="java.util.Map">
		select id as orderInstallItemId, order_id as orderId, project_install_item_id as projectInstallItemId from biz_order_install_item 
		where order_id = #{orderId} 
		and project_install_item_id in ( ${projectInstallItemIds} )	
	</select>
	
	<!-- 根据订单id和安装项id，批量查询订单安装项id 返回list -->
	<select id="selectOrderInstallItemIdsList" parameterType="map" resultType="cn.damei.entity.modules.OrderInstallItemVo">
		select id as id, order_id as orderId, project_install_item_id as projectInstallItemId from biz_order_install_item 
		where order_id = #{orderId} 
		and project_install_item_id in ( ${projectInstallItemIds} )	
		order by project_install_item_id
	</select>
	
	

	<select id="isGeneratedInstallItemPlan"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo"
		resultType="int">
		SELECT COUNT(1) from biz_order_install_plan where order_id
		=#{orderId} and
		order_install_item_id =#{projectInstallItemId}


	</select>



	<!-- 保存订单安装项 -->
	<insert id="saveOrderInstallItem"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo">
		<selectKey resultType="java.lang.Integer" keyColumn="id"
			keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_iD()
		</selectKey>


		insert into biz_order_install_item (
		order_id,
		project_install_item_id,
		install_item_name,
		install_item_sequence,
		days_to_apply_into,
		days_plan_into,
		days_plan_complete,
		is_generated_order_install_plan,
		days_plan_checksize,
		is_to_checksize,
		install_mode, 
		create_date,
		is_show_install_description,
		install_description
		
		) values(
		#{orderId},
		#{projectInstallItemId},
		#{projectInstallItemName},
		#{installItemSequence},
		#{daysToApplyInto},
		#{daysPlanInto},
		#{daysPalnComplete},
		#{isGeneratedOrdeInstallPlan},
		#{daysPlanChecksize},
		#{isToChecksize},
		#{installMode},
		#{createDate},
		#{isShowInstallDescription},
		#{installDescription}
		)
	</insert>
	
	
	<!-- 批量保存订单安装项 -->
	<insert id="batchSaveOrderInstallItem" parameterType="java.util.List">
		<selectKey resultType="java.lang.Integer" keyColumn="id" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_iD()
		</selectKey>
		insert into biz_order_install_item (
			order_id,
			project_install_item_id,
			install_item_name,
			install_item_sequence,
			days_to_apply_into,
			days_plan_into,
			days_plan_complete,
			is_generated_order_install_plan,
			days_plan_checksize,
			is_to_checksize,
			create_date,
			install_mode,
			is_show_install_description,
			install_description
		) values
		<foreach collection="list" item="item" index="index" separator="," >
		(
			#{item.orderId},
			#{item.projectInstallItemId},
			#{item.projectInstallItemName},
			#{item.installItemSequence},
			#{item.daysToApplyInto},
			#{item.daysPlanInto},
			#{item.daysPalnComplete},
			#{item.isGeneratedOrdeInstallPlan},
			#{item.daysPlanChecksize},
			#{item.isToChecksize},
			#{item.createDate},
			#{item.installMode},
			#{item.isShowInstallDescription},
			#{item.installDescription}
		)
		</foreach>
	</insert>

	<!-- 根据状态大于200施工中的订单查询订单安装项计划的状态 -->

	<select id="findOrderInstallItemPlanStatus" parameterType="int"
		resultType="cn.damei.entity.modules.OrderInstallItemVo">
		SELECT
		STATUS AS "status",
		order_id AS "orderId",
		order_install_item_id as "id",
		create_date as 'createDate'
		FROM
		biz_order_install_plan
		WHERE
		order_install_item_id IN (
		SELECT
		ID
		FROM
		biz_order_install_item
		WHERE
		order_id = #{orderId}
		)

	</select>

	<!-- 根据订单编号客户名称/客户手机查询订单信息-->

	<select id="findlistProject" parameterType="cn.damei.entity.modules.BizCusServiceProblem"
		resultType="cn.damei.entity.modules.BizCusServiceProblem">
					
		SELECT
			id AS id,
			order_number AS orderId,
			customer_name AS customerName,
			customer_phone AS customerMobile,
			CONCAT(
				customer_address,
				'-',
				community_name,
				'-',
				build_number,
				'-',
				build_unit,
				'-',
				build_room
			) AS supervisorName,
			item_manager AS supervisorMobile
		FROM
			biz_order 
		WHERE
			<if test="id != null and id != ''">
					store_id=#{id} AND
			</if>
	  (
		order_number LIKE CONCAT('%','${workOrderCode}','%' )
		OR customer_name LIKE CONCAT('%','${workOrderCode}','%' )
		OR customer_phone LIKE CONCAT('%','${workOrderCode}','%' )
		)

	</select>


	<!-- 订单状态大于200时 删除数据库状态为1的安装项, 保存最新的修改的安装项 -->
	<delete id="deleteOrderInstallItem" parameterType="int">
		DELETE a FROM biz_order_install_item a
			left JOIN  biz_order_install_plan b on a.id=b.order_install_item_id
		WHERE
			(b.`status` = "1" or b.`status` is null) and
			a.order_id = #{orderId}
	</delete>
	
	
	<!-- 订单状态大于200时 删除数据库状态为1的安装项, 保存最新的修改的安装项 -->
	<delete id="deleteOrderInstallItemPlan" parameterType="int">
		DELETE
		FROM

		biz_order_install_plan
		WHERE
		`status` = "1"
		and order_id = #{orderId}



	</delete>


	<select id="selectInstallItemCount"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo"
		resultType="int">
		SELECT count(id) from biz_order_install_item where order_id = #{orderId} and
		project_install_item_id =#{projectInstallItemId}
	</select>


	<select id="selectProjectInstallItemIds"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo"
		resultType="int">
		select * 
		from biz_order_install_item
		where order_id=#{orderId} and 
		(del_flag is null or del_flag='0');
	</select>

	<!-- 查询订单实际开工日期  -->
	<select id="selectActualStartDate"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo"
		resultType="java.sql.Date">
		select actual_start_date
		from biz_order
		where id=#{orderId} and 
		(del_flag is null or del_flag='0');
	</select>
	

	<!-- 更新订单安装项计划 -->
	<insert id="saveOrderInstallItemPlan"
		parameterType="cn.damei.entity.modules.OrderInstallItemVo">
		insert into biz_order_install_plan (
		order_id,
		order_install_item_id,
		install_item_name,
		install_item_sequence,
		plan_into_date,
		apply_into_date,
		real_into_date,
		status
		) values(
		#{orderId},
		#{id},
		#{projectInstallItemName},
		#{installItemSequence},
		#{planIntoDate},
		#{applyIntoDate},
		#{realIntoDate},
		#{status}
		)
	</insert>


	
	<!-- 批量添加订单安装项计划 -->
	<insert id="batchSaveOrderInstallItemPlan" parameterType="java.util.List">
		insert into biz_order_install_plan (
			order_id,
			order_install_item_id,
			install_item_name,
			install_item_sequence,
			plan_into_date,
			`status`,
			install_mode,
			create_date,
			plan_complete_date,
			allow_apply_checksize_date
		) values
		<foreach collection="list" item="item" index="index" separator="," >
		(
			#{item.orderId},
			#{item.id},
			#{item.projectInstallItemName},
			#{item.installItemSequence},
			#{item.planIntoDate},
			#{item.status},
			#{item.installMode},
			#{item.createDate},
			#{item.planCompleteDate},
			#{item.allowApplyChecksizeDate}
		)
		</foreach>		
	</insert>

	<delete id="deleteAllInstallItem" parameterType="int">
		delete from biz_order_install_item where order_id = #{order_id}

	</delete>
	<delete id="deleteAllInstallItemPlan" parameterType="int">
		delete from biz_order_install_plan where order_id = #{order_id}
	</delete>

	
	
	<select id="findEngineDepartByStoreIdProjectModeIdAndEmpId" parameterType="cn.damei.entity.modules.Order" resultType="cn.damei.entity.modules.Order">
	SELECT
	a.id AS "engineDepartId",
	a.`name` AS "engineDepartName"
FROM
	biz_engineering_department a
	<if test="empId !=null and empId!='' ">
	 ,biz_engin_depart_employee_position b
	
	</if>
	
<where>
a.del_flag=0 
<if test="empId !=null and empId!='' ">
and
	b.engin_depart_id = a.id
	
	AND b.employee_id = #{empId} 
	</if>
<if test="projectMode !=null and projectMode!='' ">
 and a.project_mode = #{projectMode}
	</if>
<if test="storeId !=null and storeId!='' ">
	
AND a.store_id = #{storeId}
	</if>
	
	<if test="empId !=null and empId!='' ">
	group by b.engin_depart_id
	</if>
	</where>
</select>

	<!--状态值: 分配客服,进店未签约,进店已签约,已上报 -->
	<select id="findRelatedReportInfoByCustomerPhone" parameterType="String" resultType="cn.damei.entity.modules.Order">
		SELECT
		a.id AS "orderId",
			a.get_order_datetime as "acceptOrderDate",
		a.order_number AS "orderNumber",
		b.id AS "orderReportId"
		FROM
		biz_order a
		INNER JOIN biz_order_report b ON a.customer_phone = b.customer_phone
		where
		a.customer_phone =#{_parameter} and
		b.report_status in (10,25,30,40)
		ORDER BY  b.report_datetime ASC limit 1
	</select>
	<insert id="batchInsertOrderReportRelatedInfo" parameterType="java.util.List">
		insert into biz_order_report_related_order (
		order_report_id, order_id, order_number, remarks, create_by, create_date, update_by, update_date, del_flag


		) VALUES


		(
		#{orderReportId},
		#{orderId},
		#{orderNumber},
		#{remarks},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		"0"



		)
	
	
	
</insert>

	
	
	
	<select id="selectOver" resultType="java.util.Map">
		SELECT
			CASE count(b.id)
		WHEN 0 THEN
			'0'
		ELSE
			'1'
		END AS 'isBasicworkCompleted'
		FROM
			`biz_order` a
		LEFT JOIN biz_qc_bill b ON a.id = b.order_id
		AND b.qc_check_node_id = (
			SELECT
				c.id
			FROM
				biz_qc_check_node c
			WHERE
				a.project_mode = c.project_mode
			AND a.store_id = c.store_id
			AND c.del_flag = 0
			AND c.`status` = 1
			AND c.qc_check_node_name LIKE CONCAT("%", "基装验收", "%")
		)
		AND b.`status` >= 10
		AND b.is_recheck = 0
		AND b.qc_bill_type = 1
		WHERE
			a.id = #{orderId}
		</select>
		
		
			
		<!-- 有没有复尺 -->
	<select id="queryCheckStatus" resultType="int">
		SELECT
			COUNT(1)
		FROM
			biz_order_checksize c
		WHERE
			c.order_id = #{0}  
		AND c.order_install_item_id = #{1}
	</select>
	
	
	<!-- 删除该订单下的订单安装项，匹配条件：不包含在提交的工程安装项id中的订单安装项 -->
	<delete id="deleteOrderInstallItemSomeThing" parameterType="int">
		DELETE a
		FROM
			biz_order_install_item a
		WHERE
			a.order_id = #{orderId}
		AND a.project_install_item_id NOT IN ( ${projectInstallItemIds} )
	</delete>
	
	
	<!-- 删除该订单下的订单安装项计划，匹配条件：不包含在订单安装项中的订单安装项计划 -->
	<delete id="deleteOrderInstallItemPlanSomeThing" parameterType="int">
		DELETE a
		FROM
			biz_order_install_plan a
		WHERE
			a.order_id = #{orderId}
		AND a.order_install_item_id NOT IN (
			SELECT
				b.id
			FROM
				biz_order_install_item b
			WHERE
				b.order_id = #{orderId}
		)



	</delete>
	<select id="findStoreId" resultType="String">
		select store_id from biz_order where id = #{0}
	</select>
    <select id="findInstallStatus" resultType="cn.damei.entity.modules.OrderInstallItemVo">
      SELECT a.status,a.create_date as 'createDate' FROM biz_order_install_plan a WHERE a.order_install_item_id = #{0}
    </select>
</mapper>